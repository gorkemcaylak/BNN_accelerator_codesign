// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module knn_vote (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        knn_set_V_address0,
        knn_set_V_ce0,
        knn_set_V_we0,
        knn_set_V_d0,
        knn_set_V_q0,
        knn_set_V_address1,
        knn_set_V_ce1,
        knn_set_V_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_pp0_stage0 = 22'd4;
parameter    ap_ST_fsm_pp0_stage1 = 22'd8;
parameter    ap_ST_fsm_pp0_stage2 = 22'd16;
parameter    ap_ST_fsm_pp0_stage3 = 22'd32;
parameter    ap_ST_fsm_pp0_stage4 = 22'd64;
parameter    ap_ST_fsm_pp0_stage5 = 22'd128;
parameter    ap_ST_fsm_pp0_stage6 = 22'd256;
parameter    ap_ST_fsm_pp0_stage7 = 22'd512;
parameter    ap_ST_fsm_pp0_stage8 = 22'd1024;
parameter    ap_ST_fsm_pp0_stage9 = 22'd2048;
parameter    ap_ST_fsm_pp0_stage10 = 22'd4096;
parameter    ap_ST_fsm_pp0_stage11 = 22'd8192;
parameter    ap_ST_fsm_pp0_stage12 = 22'd16384;
parameter    ap_ST_fsm_pp0_stage13 = 22'd32768;
parameter    ap_ST_fsm_pp0_stage14 = 22'd65536;
parameter    ap_ST_fsm_pp0_stage15 = 22'd131072;
parameter    ap_ST_fsm_pp0_stage16 = 22'd262144;
parameter    ap_ST_fsm_state21 = 22'd524288;
parameter    ap_ST_fsm_pp1_stage0 = 22'd1048576;
parameter    ap_ST_fsm_state24 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] knn_set_V_address0;
output   knn_set_V_ce0;
output   knn_set_V_we0;
output  [5:0] knn_set_V_d0;
input  [5:0] knn_set_V_q0;
output  [4:0] knn_set_V_address1;
output   knn_set_V_ce1;
input  [5:0] knn_set_V_q1;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] knn_set_V_address0;
reg knn_set_V_ce0;
reg knn_set_V_we0;
reg[4:0] knn_set_V_address1;
reg knn_set_V_ce1;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] k_reg_413;
reg   [3:0] agg_result_V_reg_424;
reg   [31:0] max_score_reg_436;
reg   [3:0] min_index_V_reg_448;
wire   [0:0] exitcond2_fu_460_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] i_1_fu_466_p2;
wire   [0:0] exitcond3_fu_477_p2;
reg   [0:0] exitcond3_reg_1552;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state20_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] k_1_fu_483_p2;
reg   [1:0] k_1_reg_1556;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_9_fu_489_p2;
reg   [0:0] tmp_9_reg_1561;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] tmp_9_0_1_fu_503_p2;
reg   [0:0] tmp_9_0_1_reg_1566;
wire   [5:0] knn_set_V_load_1_080_2_fu_509_p3;
reg   [5:0] knn_set_V_load_1_080_2_reg_1572;
wire   [0:0] tmp_9_0_2_fu_517_p2;
reg   [0:0] tmp_9_0_2_reg_1578;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] tmp_9_1_fu_529_p2;
reg   [0:0] tmp_9_1_reg_1583;
wire   [5:0] p_080_2_1_fu_535_p3;
reg   [5:0] p_080_2_1_reg_1590;
wire   [0:0] tmp_9_1_1_fu_543_p2;
reg   [0:0] tmp_9_1_1_reg_1596;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] tmp_9_1_2_fu_555_p2;
reg   [0:0] tmp_9_1_2_reg_1601;
wire   [5:0] p_080_2_1_2_fu_561_p3;
reg   [5:0] p_080_2_1_2_reg_1607;
wire   [0:0] tmp_9_2_fu_569_p2;
reg   [0:0] tmp_9_2_reg_1613;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [0:0] tmp_9_2_1_fu_581_p2;
reg   [0:0] tmp_9_2_1_reg_1618;
wire   [5:0] knn_set_V_load_7_080_2_2_fu_587_p3;
reg   [5:0] knn_set_V_load_7_080_2_2_reg_1624;
wire   [0:0] tmp_9_2_2_fu_595_p2;
reg   [0:0] tmp_9_2_2_reg_1630;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [0:0] tmp_9_3_fu_607_p2;
reg   [0:0] tmp_9_3_reg_1635;
wire   [5:0] p_080_2_3_fu_613_p3;
reg   [5:0] p_080_2_3_reg_1642;
wire   [3:0] p_072_2_2_fu_711_p3;
reg   [3:0] p_072_2_2_reg_1648;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [0:0] tmp_11_fu_730_p2;
reg   [0:0] tmp_11_reg_1653;
wire   [2:0] min_dist_record_2_3_fu_741_p3;
reg   [2:0] min_dist_record_2_3_reg_1658;
wire   [0:0] tmp_9_3_1_fu_749_p2;
reg   [0:0] tmp_9_3_1_reg_1663;
wire   [0:0] tmp_9_3_2_fu_761_p2;
reg   [0:0] tmp_9_3_2_reg_1668;
wire   [5:0] p_080_2_3_2_fu_767_p3;
reg   [5:0] p_080_2_3_2_reg_1674;
wire   [0:0] tmp_9_4_fu_775_p2;
reg   [0:0] tmp_9_4_reg_1680;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [0:0] tmp_9_4_1_fu_787_p2;
reg   [0:0] tmp_9_4_1_reg_1685;
wire   [5:0] knn_set_V_load_13_080_2_4_fu_793_p3;
reg   [5:0] knn_set_V_load_13_080_2_4_reg_1691;
wire   [3:0] p_072_2_4_fu_850_p3;
reg   [3:0] p_072_2_4_reg_1697;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state11_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [2:0] p_min_dist_record_2_4_fu_861_p3;
reg   [2:0] p_min_dist_record_2_4_reg_1702;
wire   [0:0] tmp_9_4_2_fu_869_p2;
reg   [0:0] tmp_9_4_2_reg_1707;
wire   [0:0] tmp_9_5_fu_881_p2;
reg   [0:0] tmp_9_5_reg_1712;
wire   [5:0] p_080_2_5_fu_887_p3;
reg   [5:0] p_080_2_5_reg_1719;
wire   [0:0] tmp_9_5_1_fu_895_p2;
reg   [0:0] tmp_9_5_1_reg_1725;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state12_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire   [0:0] tmp_9_5_2_fu_907_p2;
reg   [0:0] tmp_9_5_2_reg_1730;
wire   [5:0] p_080_2_5_2_fu_913_p3;
reg   [5:0] p_080_2_5_2_reg_1736;
wire   [0:0] tmp_15_fu_921_p2;
reg   [0:0] tmp_15_reg_1742;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state13_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire   [0:0] tmp_16_fu_939_p2;
reg   [0:0] tmp_16_reg_1747;
wire   [2:0] min_dist_record_2_5_2_fu_950_p3;
reg   [2:0] min_dist_record_2_5_2_reg_1752;
wire   [0:0] tmp_9_6_fu_958_p2;
reg   [0:0] tmp_9_6_reg_1757;
wire   [0:0] tmp_9_6_1_fu_970_p2;
reg   [0:0] tmp_9_6_1_reg_1762;
wire   [5:0] knn_set_V_load_19_080_2_6_fu_976_p3;
reg   [5:0] knn_set_V_load_19_080_2_6_reg_1768;
wire   [0:0] tmp_17_fu_997_p2;
reg   [0:0] tmp_17_reg_1774;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state14_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [3:0] p_072_2_6_fu_1014_p3;
reg   [3:0] p_072_2_6_reg_1779;
wire   [0:0] tmp_9_6_2_fu_1022_p2;
reg   [0:0] tmp_9_6_2_reg_1784;
wire   [0:0] tmp_9_7_fu_1034_p2;
reg   [0:0] tmp_9_7_reg_1789;
wire   [5:0] p_080_2_7_fu_1040_p3;
reg   [5:0] p_080_2_7_reg_1796;
wire   [0:0] tmp_19_fu_1057_p2;
reg   [0:0] tmp_19_reg_1802;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state15_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire   [2:0] min_dist_record_2_7_fu_1068_p3;
reg   [2:0] min_dist_record_2_7_reg_1807;
wire   [0:0] tmp_9_7_1_fu_1076_p2;
reg   [0:0] tmp_9_7_1_reg_1812;
wire   [0:0] tmp_9_7_2_fu_1088_p2;
reg   [0:0] tmp_9_7_2_reg_1817;
wire   [5:0] p_080_2_7_2_fu_1094_p3;
reg   [5:0] p_080_2_7_2_reg_1823;
wire   [0:0] tmp_9_8_fu_1102_p2;
reg   [0:0] tmp_9_8_reg_1829;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state16_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire   [0:0] tmp_9_8_1_fu_1114_p2;
reg   [0:0] tmp_9_8_1_reg_1834;
wire   [5:0] knn_set_V_load_25_080_2_8_fu_1120_p3;
reg   [5:0] knn_set_V_load_25_080_2_8_reg_1840;
wire   [3:0] p_072_2_8_fu_1177_p3;
reg   [3:0] p_072_2_8_reg_1846;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state17_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire   [2:0] p_min_dist_record_2_8_fu_1188_p3;
reg   [2:0] p_min_dist_record_2_8_reg_1851;
wire   [0:0] tmp_9_8_2_fu_1196_p2;
reg   [0:0] tmp_9_8_2_reg_1856;
wire   [0:0] tmp_9_9_fu_1208_p2;
reg   [0:0] tmp_9_9_reg_1861;
wire   [5:0] p_080_2_9_fu_1214_p3;
reg   [5:0] p_080_2_9_reg_1868;
wire   [0:0] tmp_23_fu_1222_p2;
reg   [0:0] tmp_23_reg_1874;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state18_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire   [0:0] tmp_9_9_2_fu_1238_p2;
reg   [0:0] tmp_9_9_2_reg_1880;
wire   [0:0] tmp_24_fu_1244_p2;
reg   [0:0] tmp_24_reg_1885;
reg   [3:0] score_addr_2_reg_1891;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state19_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire   [0:0] exitcond_fu_1354_p2;
reg   [0:0] exitcond_reg_1896;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state22_pp1_stage0_iter0;
wire    ap_block_state23_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [3:0] i_2_fu_1360_p2;
reg   [3:0] i_2_reg_1900;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] min_index_V_agg_result_V_fu_1377_p3;
reg    ap_enable_reg_pp1_iter1;
wire   [31:0] max_score_2_max_score_fu_1385_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage16_subdone;
wire    ap_CS_fsm_state21;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state22;
reg   [3:0] score_address0;
reg    score_ce0;
reg    score_we0;
reg   [31:0] score_d0;
wire   [31:0] score_q0;
reg   [3:0] i_reg_402;
reg   [1:0] k_phi_fu_417_p4;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
reg   [3:0] min_index_V_phi_fu_452_p4;
wire   [63:0] tmp_fu_472_p1;
wire   [63:0] tmp_2_fu_1297_p1;
wire    ap_block_pp0_stage16;
wire  signed [63:0] tmp_4_fu_1342_p1;
wire   [63:0] tmp_s_fu_1366_p1;
wire   [31:0] tmp_3_fu_1347_p2;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire   [5:0] p_080_2_fu_495_p3;
wire   [5:0] p_080_2_0_2_fu_522_p3;
wire   [5:0] knn_set_V_load_4_080_2_1_fu_548_p3;
wire   [5:0] p_080_2_2_fu_574_p3;
wire   [5:0] p_080_2_2_2_fu_600_p3;
wire   [0:0] tmp_5_fu_621_p2;
wire   [2:0] min_dist_record_2_cast_fu_633_p1;
wire   [0:0] tmp_6_fu_647_p2;
wire   [3:0] p_072_2_0_2_fu_644_p1;
wire   [3:0] p_072_2_fu_625_p3;
wire   [2:0] min_dist_record_2_0_2_cast_cast_fu_659_p3;
wire   [2:0] p_min_dist_record_2_fu_636_p3;
wire   [0:0] tmp_7_fu_674_p2;
wire   [2:0] p_min_dist_record_2_1_cast_cast_fu_678_p3;
wire   [2:0] min_dist_record_2_1_fu_666_p3;
wire   [0:0] tmp_8_fu_693_p2;
wire   [0:0] tmp_10_fu_705_p2;
wire   [3:0] p_072_2_1_2_cast_fu_697_p3;
wire   [3:0] p_072_2_1_fu_651_p3;
wire   [2:0] min_dist_record_2_2_cast_fu_719_p1;
wire   [2:0] min_dist_record_2_1_2_fu_685_p3;
wire   [2:0] min_dist_record_2_2_2_cast_cast_fu_734_p3;
wire   [2:0] p_min_dist_record_2_2_fu_722_p3;
wire   [5:0] knn_set_V_load_10_080_2_3_fu_754_p3;
wire   [5:0] p_080_2_4_fu_780_p3;
wire   [3:0] p_072_2_2_2_cast_cast_fu_801_p3;
wire   [0:0] tmp_12_fu_814_p2;
wire   [2:0] p_min_dist_record_2_3_cast_cast_fu_818_p3;
wire   [0:0] tmp_13_fu_832_p2;
wire   [0:0] tmp_14_fu_844_p2;
wire   [3:0] p_072_2_3_2_cast_fu_836_p3;
wire   [3:0] p_072_2_3_fu_808_p3;
wire   [2:0] min_dist_record_2_4_cast_fu_858_p1;
wire   [2:0] min_dist_record_2_3_2_fu_825_p3;
wire   [5:0] p_080_2_4_2_fu_874_p3;
wire   [5:0] knn_set_V_load_16_080_2_5_fu_900_p3;
wire   [2:0] min_dist_record_2_4_2_cast_cast_fu_925_p3;
wire   [2:0] p_min_dist_record_2_5_cast_cast_fu_943_p3;
wire   [2:0] min_dist_record_2_5_fu_932_p3;
wire   [5:0] p_080_2_6_fu_963_p3;
wire   [3:0] p_072_2_4_2_cast_cast_fu_984_p3;
wire   [0:0] tmp_18_fu_1009_p2;
wire   [3:0] p_072_2_5_2_cast_fu_1001_p3;
wire   [3:0] p_072_2_5_fu_991_p3;
wire   [5:0] p_080_2_6_2_fu_1027_p3;
wire   [2:0] min_dist_record_2_6_cast_fu_1048_p1;
wire   [2:0] min_dist_record_2_6_2_cast_cast_fu_1061_p3;
wire   [2:0] p_min_dist_record_2_6_fu_1051_p3;
wire   [5:0] knn_set_V_load_22_080_2_7_fu_1081_p3;
wire   [5:0] p_080_2_8_fu_1107_p3;
wire   [3:0] p_072_2_6_2_cast_cast_fu_1128_p3;
wire   [0:0] tmp_20_fu_1141_p2;
wire   [2:0] p_min_dist_record_2_7_cast_cast_fu_1145_p3;
wire   [0:0] tmp_21_fu_1159_p2;
wire   [0:0] tmp_22_fu_1171_p2;
wire   [3:0] p_072_2_7_2_fu_1163_p3;
wire   [3:0] p_072_2_7_fu_1135_p3;
wire   [2:0] min_dist_record_2_8_cast_fu_1185_p1;
wire   [2:0] min_dist_record_2_7_2_fu_1152_p3;
wire   [5:0] p_080_2_8_2_fu_1201_p3;
wire    ap_block_pp0_stage15;
wire   [0:0] tmp_9_9_1_fu_1226_p2;
wire   [5:0] knn_set_V_load_28_080_2_9_fu_1231_p3;
wire   [3:0] p_072_2_8_2_fu_1250_p3;
wire   [2:0] min_dist_record_2_8_2_cast_cast_fu_1263_p3;
wire   [3:0] p_072_2_9_fu_1257_p3;
wire   [2:0] p_min_dist_record_2_9_cast_cast_fu_1283_p3;
wire   [2:0] min_dist_record_2_9_fu_1270_p3;
wire   [3:0] p_072_2_9_2_fu_1276_p3;
wire   [5:0] p_shl2_fu_1306_p3;
wire   [6:0] p_shl2_cast_fu_1314_p1;
wire   [6:0] lhs_V_cast2_fu_1302_p1;
wire   [6:0] r_V_fu_1318_p2;
wire  signed [35:0] r_V_cast_fu_1324_p1;
wire   [2:0] min_dist_record_2_9_2_fu_1290_p3;
wire   [36:0] lhs_V_fu_1328_p1;
wire   [36:0] rhs_V_fu_1332_p1;
wire   [36:0] r_V_1_fu_1336_p2;
wire   [0:0] tmp_1_fu_1371_p2;
wire    ap_CS_fsm_state24;
reg   [21:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

knn_vote_score #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
score_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(score_address0),
    .ce0(score_ce0),
    .we0(score_we0),
    .d0(score_d0),
    .q0(score_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_460_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_subdone == 1'b0))))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state3 ^ 1'b1);
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_subdone == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_460_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state22))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((ap_block_pp1_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state22))) begin
            ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state22 ^ 1'b1);
        end else if ((ap_block_pp1_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        agg_result_V_reg_424 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_reg_1896))) begin
        agg_result_V_reg_424 <= min_index_V_agg_result_V_fu_1377_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_460_p2 == 1'd0))) begin
        i_reg_402 <= i_1_fu_466_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_402 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_460_p2 == 1'd1))) begin
        k_reg_413 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        k_reg_413 <= k_1_reg_1556;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        max_score_reg_436 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_reg_1896))) begin
        max_score_reg_436 <= max_score_2_max_score_fu_1385_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        min_index_V_reg_448 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_reg_1896))) begin
        min_index_V_reg_448 <= i_2_reg_1900;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        exitcond3_reg_1552 <= exitcond3_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0))) begin
        exitcond_reg_1896 <= exitcond_fu_1354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        i_2_reg_1900 <= i_2_fu_1360_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        k_1_reg_1556 <= k_1_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0))) begin
        knn_set_V_load_13_080_2_4_reg_1691 <= knn_set_V_load_13_080_2_4_fu_793_p3;
        tmp_9_4_1_reg_1685 <= tmp_9_4_1_fu_787_p2;
        tmp_9_4_reg_1680 <= tmp_9_4_fu_775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0))) begin
        knn_set_V_load_19_080_2_6_reg_1768 <= knn_set_V_load_19_080_2_6_fu_976_p3;
        min_dist_record_2_5_2_reg_1752 <= min_dist_record_2_5_2_fu_950_p3;
        tmp_15_reg_1742 <= tmp_15_fu_921_p2;
        tmp_16_reg_1747 <= tmp_16_fu_939_p2;
        tmp_9_6_1_reg_1762 <= tmp_9_6_1_fu_970_p2;
        tmp_9_6_reg_1757 <= tmp_9_6_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (exitcond3_reg_1552 == 1'd0))) begin
        knn_set_V_load_1_080_2_reg_1572 <= knn_set_V_load_1_080_2_fu_509_p3;
        tmp_9_0_1_reg_1566 <= tmp_9_0_1_fu_503_p2;
        tmp_9_reg_1561 <= tmp_9_fu_489_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0))) begin
        knn_set_V_load_25_080_2_8_reg_1840 <= knn_set_V_load_25_080_2_8_fu_1120_p3;
        tmp_9_8_1_reg_1834 <= tmp_9_8_1_fu_1114_p2;
        tmp_9_8_reg_1829 <= tmp_9_8_fu_1102_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0))) begin
        knn_set_V_load_7_080_2_2_reg_1624 <= knn_set_V_load_7_080_2_2_fu_587_p3;
        tmp_9_2_1_reg_1618 <= tmp_9_2_1_fu_581_p2;
        tmp_9_2_reg_1613 <= tmp_9_2_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_11001 == 1'b0))) begin
        min_dist_record_2_3_reg_1658 <= min_dist_record_2_3_fu_741_p3;
        p_072_2_2_reg_1648[1 : 0] <= p_072_2_2_fu_711_p3[1 : 0];
p_072_2_2_reg_1648[3] <= p_072_2_2_fu_711_p3[3];
        p_080_2_3_2_reg_1674 <= p_080_2_3_2_fu_767_p3;
        tmp_11_reg_1653 <= tmp_11_fu_730_p2;
        tmp_9_3_1_reg_1663 <= tmp_9_3_1_fu_749_p2;
        tmp_9_3_2_reg_1668 <= tmp_9_3_2_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0))) begin
        min_dist_record_2_7_reg_1807 <= min_dist_record_2_7_fu_1068_p3;
        p_080_2_7_2_reg_1823 <= p_080_2_7_2_fu_1094_p3;
        tmp_19_reg_1802 <= tmp_19_fu_1057_p2;
        tmp_9_7_1_reg_1812 <= tmp_9_7_1_fu_1076_p2;
        tmp_9_7_2_reg_1817 <= tmp_9_7_2_fu_1088_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0))) begin
        p_072_2_4_reg_1697 <= p_072_2_4_fu_850_p3;
        p_080_2_5_reg_1719 <= p_080_2_5_fu_887_p3;
        p_min_dist_record_2_4_reg_1702 <= p_min_dist_record_2_4_fu_861_p3;
        tmp_9_4_2_reg_1707 <= tmp_9_4_2_fu_869_p2;
        tmp_9_5_reg_1712 <= tmp_9_5_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0))) begin
        p_072_2_6_reg_1779 <= p_072_2_6_fu_1014_p3;
        p_080_2_7_reg_1796 <= p_080_2_7_fu_1040_p3;
        tmp_17_reg_1774 <= tmp_17_fu_997_p2;
        tmp_9_6_2_reg_1784 <= tmp_9_6_2_fu_1022_p2;
        tmp_9_7_reg_1789 <= tmp_9_7_fu_1034_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_11001 == 1'b0))) begin
        p_072_2_8_reg_1846 <= p_072_2_8_fu_1177_p3;
        p_080_2_9_reg_1868 <= p_080_2_9_fu_1214_p3;
        p_min_dist_record_2_8_reg_1851 <= p_min_dist_record_2_8_fu_1188_p3;
        tmp_9_8_2_reg_1856 <= tmp_9_8_2_fu_1196_p2;
        tmp_9_9_reg_1861 <= tmp_9_9_fu_1208_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
        p_080_2_1_2_reg_1607 <= p_080_2_1_2_fu_561_p3;
        tmp_9_1_1_reg_1596 <= tmp_9_1_1_fu_543_p2;
        tmp_9_1_2_reg_1601 <= tmp_9_1_2_fu_555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        p_080_2_1_reg_1590 <= p_080_2_1_fu_535_p3;
        tmp_9_0_2_reg_1578 <= tmp_9_0_2_fu_517_p2;
        tmp_9_1_reg_1583 <= tmp_9_1_fu_529_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0))) begin
        p_080_2_3_reg_1642 <= p_080_2_3_fu_613_p3;
        tmp_9_2_2_reg_1630 <= tmp_9_2_2_fu_595_p2;
        tmp_9_3_reg_1635 <= tmp_9_3_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0))) begin
        p_080_2_5_2_reg_1736 <= p_080_2_5_2_fu_913_p3;
        tmp_9_5_1_reg_1725 <= tmp_9_5_1_fu_895_p2;
        tmp_9_5_2_reg_1730 <= tmp_9_5_2_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0))) begin
        score_addr_2_reg_1891 <= tmp_2_fu_1297_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_11001 == 1'b0))) begin
        tmp_23_reg_1874 <= tmp_23_fu_1222_p2;
        tmp_24_reg_1885 <= tmp_24_fu_1244_p2;
        tmp_9_9_2_reg_1880 <= tmp_9_9_2_fu_1238_p2;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond3_fu_477_p2)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_fu_1354_p2)) begin
        ap_condition_pp1_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state24))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        k_phi_fu_417_p4 = k_1_reg_1556;
    end else begin
        k_phi_fu_417_p4 = k_reg_413;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16 == 1'b0))) begin
            knn_set_V_address0 = tmp_4_fu_1342_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14 == 1'b0))) begin
            knn_set_V_address0 = 64'd28;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13 == 1'b0))) begin
            knn_set_V_address0 = 64'd26;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12 == 1'b0))) begin
            knn_set_V_address0 = 64'd24;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11 == 1'b0))) begin
            knn_set_V_address0 = 64'd22;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10 == 1'b0))) begin
            knn_set_V_address0 = 64'd20;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9 == 1'b0))) begin
            knn_set_V_address0 = 64'd18;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8 == 1'b0))) begin
            knn_set_V_address0 = 64'd16;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7 == 1'b0))) begin
            knn_set_V_address0 = 64'd14;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6 == 1'b0))) begin
            knn_set_V_address0 = 64'd12;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0))) begin
            knn_set_V_address0 = 64'd10;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0))) begin
            knn_set_V_address0 = 64'd8;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
            knn_set_V_address0 = 64'd6;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
            knn_set_V_address0 = 64'd4;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
            knn_set_V_address0 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0 == 1'b0))) begin
            knn_set_V_address0 = 64'd0;
        end else begin
            knn_set_V_address0 = 'bx;
        end
    end else begin
        knn_set_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14 == 1'b0))) begin
            knn_set_V_address1 = 64'd29;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13 == 1'b0))) begin
            knn_set_V_address1 = 64'd27;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12 == 1'b0))) begin
            knn_set_V_address1 = 64'd25;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11 == 1'b0))) begin
            knn_set_V_address1 = 64'd23;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10 == 1'b0))) begin
            knn_set_V_address1 = 64'd21;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9 == 1'b0))) begin
            knn_set_V_address1 = 64'd19;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8 == 1'b0))) begin
            knn_set_V_address1 = 64'd17;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7 == 1'b0))) begin
            knn_set_V_address1 = 64'd15;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6 == 1'b0))) begin
            knn_set_V_address1 = 64'd13;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0))) begin
            knn_set_V_address1 = 64'd11;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0))) begin
            knn_set_V_address1 = 64'd9;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
            knn_set_V_address1 = 64'd7;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
            knn_set_V_address1 = 64'd5;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
            knn_set_V_address1 = 64'd3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0 == 1'b0))) begin
            knn_set_V_address1 = 64'd1;
        end else begin
            knn_set_V_address1 = 'bx;
        end
    end else begin
        knn_set_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_11001 == 1'b0)))) begin
        knn_set_V_ce0 = 1'b1;
    end else begin
        knn_set_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_11001 == 1'b0)))) begin
        knn_set_V_ce1 = 1'b1;
    end else begin
        knn_set_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0))) begin
        knn_set_V_we0 = 1'b1;
    end else begin
        knn_set_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_reg_1896) & (ap_block_pp1_stage0 == 1'b0))) begin
        min_index_V_phi_fu_452_p4 = i_2_reg_1900;
    end else begin
        min_index_V_phi_fu_452_p4 = min_index_V_reg_448;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0 == 1'b0))) begin
        score_address0 = tmp_s_fu_1366_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        score_address0 = score_addr_2_reg_1891;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16 == 1'b0))) begin
        score_address0 = tmp_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        score_address0 = tmp_fu_472_p1;
    end else begin
        score_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0)))) begin
        score_ce0 = 1'b1;
    end else begin
        score_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        score_d0 = tmp_3_fu_1347_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        score_d0 = 32'd0;
    end else begin
        score_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_460_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond3_reg_1552 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        score_we0 = 1'b1;
    end else begin
        score_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_460_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_subdone == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'd1 == exitcond3_fu_477_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'd1 == exitcond3_fu_477_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((ap_block_pp0_stage2_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((ap_block_pp0_stage4_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((ap_block_pp0_stage5_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((ap_block_pp0_stage6_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((ap_block_pp0_stage7_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((ap_block_pp0_stage8_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((ap_block_pp0_stage9_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((ap_block_pp0_stage10_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((ap_block_pp0_stage11_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((ap_block_pp0_stage12_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((ap_block_pp0_stage13_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((ap_block_pp0_stage14_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((ap_block_pp0_stage15_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((ap_block_pp0_stage16_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_subdone == 1'b0) & (1'd1 == exitcond_fu_1354_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_subdone == 1'b0) & (1'd1 == exitcond_fu_1354_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd21];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_return = agg_result_V_reg_424;

assign exitcond2_fu_460_p2 = ((i_reg_402 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond3_fu_477_p2 = ((k_phi_fu_417_p4 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_fu_1354_p2 = ((min_index_V_phi_fu_452_p4 == 4'd10) ? 1'b1 : 1'b0);

assign i_1_fu_466_p2 = (i_reg_402 + 4'd1);

assign i_2_fu_1360_p2 = (min_index_V_phi_fu_452_p4 + 4'd1);

assign k_1_fu_483_p2 = (k_phi_fu_417_p4 + 2'd1);

assign knn_set_V_d0 = 6'd50;

assign knn_set_V_load_10_080_2_3_fu_754_p3 = ((tmp_9_3_1_fu_749_p2[0:0] === 1'b1) ? knn_set_V_q0 : p_080_2_3_reg_1642);

assign knn_set_V_load_13_080_2_4_fu_793_p3 = ((tmp_9_4_1_fu_787_p2[0:0] === 1'b1) ? knn_set_V_q1 : p_080_2_4_fu_780_p3);

assign knn_set_V_load_16_080_2_5_fu_900_p3 = ((tmp_9_5_1_fu_895_p2[0:0] === 1'b1) ? knn_set_V_q0 : p_080_2_5_reg_1719);

assign knn_set_V_load_19_080_2_6_fu_976_p3 = ((tmp_9_6_1_fu_970_p2[0:0] === 1'b1) ? knn_set_V_q1 : p_080_2_6_fu_963_p3);

assign knn_set_V_load_1_080_2_fu_509_p3 = ((tmp_9_0_1_fu_503_p2[0:0] === 1'b1) ? knn_set_V_q1 : p_080_2_fu_495_p3);

assign knn_set_V_load_22_080_2_7_fu_1081_p3 = ((tmp_9_7_1_fu_1076_p2[0:0] === 1'b1) ? knn_set_V_q0 : p_080_2_7_reg_1796);

assign knn_set_V_load_25_080_2_8_fu_1120_p3 = ((tmp_9_8_1_fu_1114_p2[0:0] === 1'b1) ? knn_set_V_q1 : p_080_2_8_fu_1107_p3);

assign knn_set_V_load_28_080_2_9_fu_1231_p3 = ((tmp_9_9_1_fu_1226_p2[0:0] === 1'b1) ? knn_set_V_q0 : p_080_2_9_reg_1868);

assign knn_set_V_load_4_080_2_1_fu_548_p3 = ((tmp_9_1_1_fu_543_p2[0:0] === 1'b1) ? knn_set_V_q0 : p_080_2_1_reg_1590);

assign knn_set_V_load_7_080_2_2_fu_587_p3 = ((tmp_9_2_1_fu_581_p2[0:0] === 1'b1) ? knn_set_V_q1 : p_080_2_2_fu_574_p3);

assign lhs_V_cast2_fu_1302_p1 = p_072_2_9_2_fu_1276_p3;

assign lhs_V_fu_1328_p1 = $unsigned(r_V_cast_fu_1324_p1);

assign max_score_2_max_score_fu_1385_p3 = ((tmp_1_fu_1371_p2[0:0] === 1'b1) ? score_q0 : max_score_reg_436);

assign min_dist_record_2_0_2_cast_cast_fu_659_p3 = ((tmp_9_1_reg_1583[0:0] === 1'b1) ? 3'd0 : 3'd2);

assign min_dist_record_2_1_2_fu_685_p3 = ((tmp_7_fu_674_p2[0:0] === 1'b1) ? p_min_dist_record_2_1_cast_cast_fu_678_p3 : min_dist_record_2_1_fu_666_p3);

assign min_dist_record_2_1_fu_666_p3 = ((tmp_6_fu_647_p2[0:0] === 1'b1) ? min_dist_record_2_0_2_cast_cast_fu_659_p3 : p_min_dist_record_2_fu_636_p3);

assign min_dist_record_2_2_2_cast_cast_fu_734_p3 = ((tmp_9_3_reg_1635[0:0] === 1'b1) ? 3'd0 : 3'd2);

assign min_dist_record_2_2_cast_fu_719_p1 = tmp_9_2_1_reg_1618;

assign min_dist_record_2_3_2_fu_825_p3 = ((tmp_12_fu_814_p2[0:0] === 1'b1) ? p_min_dist_record_2_3_cast_cast_fu_818_p3 : min_dist_record_2_3_reg_1658);

assign min_dist_record_2_3_fu_741_p3 = ((tmp_11_fu_730_p2[0:0] === 1'b1) ? min_dist_record_2_2_2_cast_cast_fu_734_p3 : p_min_dist_record_2_2_fu_722_p3);

assign min_dist_record_2_4_2_cast_cast_fu_925_p3 = ((tmp_9_5_reg_1712[0:0] === 1'b1) ? 3'd0 : 3'd2);

assign min_dist_record_2_4_cast_fu_858_p1 = tmp_9_4_1_reg_1685;

assign min_dist_record_2_5_2_fu_950_p3 = ((tmp_16_fu_939_p2[0:0] === 1'b1) ? p_min_dist_record_2_5_cast_cast_fu_943_p3 : min_dist_record_2_5_fu_932_p3);

assign min_dist_record_2_5_fu_932_p3 = ((tmp_15_fu_921_p2[0:0] === 1'b1) ? min_dist_record_2_4_2_cast_cast_fu_925_p3 : p_min_dist_record_2_4_reg_1702);

assign min_dist_record_2_6_2_cast_cast_fu_1061_p3 = ((tmp_9_7_reg_1789[0:0] === 1'b1) ? 3'd0 : 3'd2);

assign min_dist_record_2_6_cast_fu_1048_p1 = tmp_9_6_1_reg_1762;

assign min_dist_record_2_7_2_fu_1152_p3 = ((tmp_20_fu_1141_p2[0:0] === 1'b1) ? p_min_dist_record_2_7_cast_cast_fu_1145_p3 : min_dist_record_2_7_reg_1807);

assign min_dist_record_2_7_fu_1068_p3 = ((tmp_19_fu_1057_p2[0:0] === 1'b1) ? min_dist_record_2_6_2_cast_cast_fu_1061_p3 : p_min_dist_record_2_6_fu_1051_p3);

assign min_dist_record_2_8_2_cast_cast_fu_1263_p3 = ((tmp_9_9_reg_1861[0:0] === 1'b1) ? 3'd0 : 3'd2);

assign min_dist_record_2_8_cast_fu_1185_p1 = tmp_9_8_1_reg_1834;

assign min_dist_record_2_9_2_fu_1290_p3 = ((tmp_24_reg_1885[0:0] === 1'b1) ? p_min_dist_record_2_9_cast_cast_fu_1283_p3 : min_dist_record_2_9_fu_1270_p3);

assign min_dist_record_2_9_fu_1270_p3 = ((tmp_23_reg_1874[0:0] === 1'b1) ? min_dist_record_2_8_2_cast_cast_fu_1263_p3 : p_min_dist_record_2_8_reg_1851);

assign min_dist_record_2_cast_fu_633_p1 = tmp_9_0_1_reg_1566;

assign min_index_V_agg_result_V_fu_1377_p3 = ((tmp_1_fu_1371_p2[0:0] === 1'b1) ? min_index_V_reg_448 : agg_result_V_reg_424);

assign p_072_2_0_2_fu_644_p1 = tmp_9_1_reg_1583;

assign p_072_2_1_2_cast_fu_697_p3 = ((tmp_8_fu_693_p2[0:0] === 1'b1) ? 4'd2 : 4'd1);

assign p_072_2_1_fu_651_p3 = ((tmp_6_fu_647_p2[0:0] === 1'b1) ? p_072_2_0_2_fu_644_p1 : p_072_2_fu_625_p3);

assign p_072_2_2_2_cast_cast_fu_801_p3 = ((tmp_9_3_reg_1635[0:0] === 1'b1) ? 4'd3 : 4'd2);

assign p_072_2_2_fu_711_p3 = ((tmp_10_fu_705_p2[0:0] === 1'b1) ? p_072_2_1_2_cast_fu_697_p3 : p_072_2_1_fu_651_p3);

assign p_072_2_3_2_cast_fu_836_p3 = ((tmp_13_fu_832_p2[0:0] === 1'b1) ? 4'd4 : 4'd3);

assign p_072_2_3_fu_808_p3 = ((tmp_11_reg_1653[0:0] === 1'b1) ? p_072_2_2_2_cast_cast_fu_801_p3 : p_072_2_2_reg_1648);

assign p_072_2_4_2_cast_cast_fu_984_p3 = ((tmp_9_5_reg_1712[0:0] === 1'b1) ? 4'd5 : 4'd4);

assign p_072_2_4_fu_850_p3 = ((tmp_14_fu_844_p2[0:0] === 1'b1) ? p_072_2_3_2_cast_fu_836_p3 : p_072_2_3_fu_808_p3);

assign p_072_2_5_2_cast_fu_1001_p3 = ((tmp_17_fu_997_p2[0:0] === 1'b1) ? 4'd6 : 4'd5);

assign p_072_2_5_fu_991_p3 = ((tmp_15_reg_1742[0:0] === 1'b1) ? p_072_2_4_2_cast_cast_fu_984_p3 : p_072_2_4_reg_1697);

assign p_072_2_6_2_cast_cast_fu_1128_p3 = ((tmp_9_7_reg_1789[0:0] === 1'b1) ? 4'd7 : 4'd6);

assign p_072_2_6_fu_1014_p3 = ((tmp_18_fu_1009_p2[0:0] === 1'b1) ? p_072_2_5_2_cast_fu_1001_p3 : p_072_2_5_fu_991_p3);

assign p_072_2_7_2_fu_1163_p3 = ((tmp_21_fu_1159_p2[0:0] === 1'b1) ? 4'd8 : 4'd7);

assign p_072_2_7_fu_1135_p3 = ((tmp_19_reg_1802[0:0] === 1'b1) ? p_072_2_6_2_cast_cast_fu_1128_p3 : p_072_2_6_reg_1779);

assign p_072_2_8_2_fu_1250_p3 = ((tmp_9_9_reg_1861[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign p_072_2_8_fu_1177_p3 = ((tmp_22_fu_1171_p2[0:0] === 1'b1) ? p_072_2_7_2_fu_1163_p3 : p_072_2_7_fu_1135_p3);

assign p_072_2_9_2_fu_1276_p3 = ((tmp_24_reg_1885[0:0] === 1'b1) ? 4'd9 : p_072_2_9_fu_1257_p3);

assign p_072_2_9_fu_1257_p3 = ((tmp_23_reg_1874[0:0] === 1'b1) ? p_072_2_8_2_fu_1250_p3 : p_072_2_8_reg_1846);

assign p_072_2_fu_625_p3 = ((tmp_5_fu_621_p2[0:0] === 1'b1) ? 4'd0 : 4'd10);

assign p_080_2_0_2_fu_522_p3 = ((tmp_9_0_2_fu_517_p2[0:0] === 1'b1) ? knn_set_V_q0 : knn_set_V_load_1_080_2_reg_1572);

assign p_080_2_1_2_fu_561_p3 = ((tmp_9_1_2_fu_555_p2[0:0] === 1'b1) ? knn_set_V_q1 : knn_set_V_load_4_080_2_1_fu_548_p3);

assign p_080_2_1_fu_535_p3 = ((tmp_9_1_fu_529_p2[0:0] === 1'b1) ? knn_set_V_q1 : p_080_2_0_2_fu_522_p3);

assign p_080_2_2_2_fu_600_p3 = ((tmp_9_2_2_fu_595_p2[0:0] === 1'b1) ? knn_set_V_q0 : knn_set_V_load_7_080_2_2_reg_1624);

assign p_080_2_2_fu_574_p3 = ((tmp_9_2_fu_569_p2[0:0] === 1'b1) ? knn_set_V_q0 : p_080_2_1_2_reg_1607);

assign p_080_2_3_2_fu_767_p3 = ((tmp_9_3_2_fu_761_p2[0:0] === 1'b1) ? knn_set_V_q1 : knn_set_V_load_10_080_2_3_fu_754_p3);

assign p_080_2_3_fu_613_p3 = ((tmp_9_3_fu_607_p2[0:0] === 1'b1) ? knn_set_V_q1 : p_080_2_2_2_fu_600_p3);

assign p_080_2_4_2_fu_874_p3 = ((tmp_9_4_2_fu_869_p2[0:0] === 1'b1) ? knn_set_V_q0 : knn_set_V_load_13_080_2_4_reg_1691);

assign p_080_2_4_fu_780_p3 = ((tmp_9_4_fu_775_p2[0:0] === 1'b1) ? knn_set_V_q0 : p_080_2_3_2_reg_1674);

assign p_080_2_5_2_fu_913_p3 = ((tmp_9_5_2_fu_907_p2[0:0] === 1'b1) ? knn_set_V_q1 : knn_set_V_load_16_080_2_5_fu_900_p3);

assign p_080_2_5_fu_887_p3 = ((tmp_9_5_fu_881_p2[0:0] === 1'b1) ? knn_set_V_q1 : p_080_2_4_2_fu_874_p3);

assign p_080_2_6_2_fu_1027_p3 = ((tmp_9_6_2_fu_1022_p2[0:0] === 1'b1) ? knn_set_V_q0 : knn_set_V_load_19_080_2_6_reg_1768);

assign p_080_2_6_fu_963_p3 = ((tmp_9_6_fu_958_p2[0:0] === 1'b1) ? knn_set_V_q0 : p_080_2_5_2_reg_1736);

assign p_080_2_7_2_fu_1094_p3 = ((tmp_9_7_2_fu_1088_p2[0:0] === 1'b1) ? knn_set_V_q1 : knn_set_V_load_22_080_2_7_fu_1081_p3);

assign p_080_2_7_fu_1040_p3 = ((tmp_9_7_fu_1034_p2[0:0] === 1'b1) ? knn_set_V_q1 : p_080_2_6_2_fu_1027_p3);

assign p_080_2_8_2_fu_1201_p3 = ((tmp_9_8_2_fu_1196_p2[0:0] === 1'b1) ? knn_set_V_q0 : knn_set_V_load_25_080_2_8_reg_1840);

assign p_080_2_8_fu_1107_p3 = ((tmp_9_8_fu_1102_p2[0:0] === 1'b1) ? knn_set_V_q0 : p_080_2_7_2_reg_1823);

assign p_080_2_9_fu_1214_p3 = ((tmp_9_9_fu_1208_p2[0:0] === 1'b1) ? knn_set_V_q1 : p_080_2_8_2_fu_1201_p3);

assign p_080_2_fu_495_p3 = ((tmp_9_fu_489_p2[0:0] === 1'b1) ? knn_set_V_q0 : 6'd50);

assign p_min_dist_record_2_1_cast_cast_fu_678_p3 = ((tmp_9_1_2_reg_1601[0:0] === 1'b1) ? 3'd2 : 3'd1);

assign p_min_dist_record_2_2_fu_722_p3 = ((tmp_8_fu_693_p2[0:0] === 1'b1) ? min_dist_record_2_2_cast_fu_719_p1 : min_dist_record_2_1_2_fu_685_p3);

assign p_min_dist_record_2_3_cast_cast_fu_818_p3 = ((tmp_9_3_2_reg_1668[0:0] === 1'b1) ? 3'd2 : 3'd1);

assign p_min_dist_record_2_4_fu_861_p3 = ((tmp_13_fu_832_p2[0:0] === 1'b1) ? min_dist_record_2_4_cast_fu_858_p1 : min_dist_record_2_3_2_fu_825_p3);

assign p_min_dist_record_2_5_cast_cast_fu_943_p3 = ((tmp_9_5_2_reg_1730[0:0] === 1'b1) ? 3'd2 : 3'd1);

assign p_min_dist_record_2_6_fu_1051_p3 = ((tmp_17_reg_1774[0:0] === 1'b1) ? min_dist_record_2_6_cast_fu_1048_p1 : min_dist_record_2_5_2_reg_1752);

assign p_min_dist_record_2_7_cast_cast_fu_1145_p3 = ((tmp_9_7_2_reg_1817[0:0] === 1'b1) ? 3'd2 : 3'd1);

assign p_min_dist_record_2_8_fu_1188_p3 = ((tmp_21_fu_1159_p2[0:0] === 1'b1) ? min_dist_record_2_8_cast_fu_1185_p1 : min_dist_record_2_7_2_fu_1152_p3);

assign p_min_dist_record_2_9_cast_cast_fu_1283_p3 = ((tmp_9_9_2_reg_1880[0:0] === 1'b1) ? 3'd2 : 3'd1);

assign p_min_dist_record_2_fu_636_p3 = ((tmp_5_fu_621_p2[0:0] === 1'b1) ? min_dist_record_2_cast_fu_633_p1 : 3'd4);

assign p_shl2_cast_fu_1314_p1 = p_shl2_fu_1306_p3;

assign p_shl2_fu_1306_p3 = {{p_072_2_9_2_fu_1276_p3}, {2'd0}};

assign r_V_1_fu_1336_p2 = (lhs_V_fu_1328_p1 + rhs_V_fu_1332_p1);

assign r_V_cast_fu_1324_p1 = $signed(r_V_fu_1318_p2);

assign r_V_fu_1318_p2 = (p_shl2_cast_fu_1314_p1 - lhs_V_cast2_fu_1302_p1);

assign rhs_V_fu_1332_p1 = min_dist_record_2_9_2_fu_1290_p3;

assign tmp_10_fu_705_p2 = (tmp_8_fu_693_p2 | tmp_7_fu_674_p2);

assign tmp_11_fu_730_p2 = (tmp_9_3_reg_1635 | tmp_9_2_2_reg_1630);

assign tmp_12_fu_814_p2 = (tmp_9_3_2_reg_1668 | tmp_9_3_1_reg_1663);

assign tmp_13_fu_832_p2 = (tmp_9_4_1_reg_1685 | tmp_9_4_reg_1680);

assign tmp_14_fu_844_p2 = (tmp_13_fu_832_p2 | tmp_12_fu_814_p2);

assign tmp_15_fu_921_p2 = (tmp_9_5_reg_1712 | tmp_9_4_2_reg_1707);

assign tmp_16_fu_939_p2 = (tmp_9_5_2_reg_1730 | tmp_9_5_1_reg_1725);

assign tmp_17_fu_997_p2 = (tmp_9_6_1_reg_1762 | tmp_9_6_reg_1757);

assign tmp_18_fu_1009_p2 = (tmp_17_fu_997_p2 | tmp_16_reg_1747);

assign tmp_19_fu_1057_p2 = (tmp_9_7_reg_1789 | tmp_9_6_2_reg_1784);

assign tmp_1_fu_1371_p2 = (($signed(score_q0) > $signed(max_score_reg_436)) ? 1'b1 : 1'b0);

assign tmp_20_fu_1141_p2 = (tmp_9_7_2_reg_1817 | tmp_9_7_1_reg_1812);

assign tmp_21_fu_1159_p2 = (tmp_9_8_1_reg_1834 | tmp_9_8_reg_1829);

assign tmp_22_fu_1171_p2 = (tmp_21_fu_1159_p2 | tmp_20_fu_1141_p2);

assign tmp_23_fu_1222_p2 = (tmp_9_9_reg_1861 | tmp_9_8_2_reg_1856);

assign tmp_24_fu_1244_p2 = (tmp_9_9_2_fu_1238_p2 | tmp_9_9_1_fu_1226_p2);

assign tmp_2_fu_1297_p1 = p_072_2_9_2_fu_1276_p3;

assign tmp_3_fu_1347_p2 = (score_q0 + 32'd1);

assign tmp_4_fu_1342_p1 = $signed(r_V_1_fu_1336_p2);

assign tmp_5_fu_621_p2 = (tmp_9_0_1_reg_1566 | tmp_9_reg_1561);

assign tmp_6_fu_647_p2 = (tmp_9_1_reg_1583 | tmp_9_0_2_reg_1578);

assign tmp_7_fu_674_p2 = (tmp_9_1_2_reg_1601 | tmp_9_1_1_reg_1596);

assign tmp_8_fu_693_p2 = (tmp_9_2_1_reg_1618 | tmp_9_2_reg_1613);

assign tmp_9_0_1_fu_503_p2 = ((knn_set_V_q1 < p_080_2_fu_495_p3) ? 1'b1 : 1'b0);

assign tmp_9_0_2_fu_517_p2 = ((knn_set_V_q0 < knn_set_V_load_1_080_2_reg_1572) ? 1'b1 : 1'b0);

assign tmp_9_1_1_fu_543_p2 = ((knn_set_V_q0 < p_080_2_1_reg_1590) ? 1'b1 : 1'b0);

assign tmp_9_1_2_fu_555_p2 = ((knn_set_V_q1 < knn_set_V_load_4_080_2_1_fu_548_p3) ? 1'b1 : 1'b0);

assign tmp_9_1_fu_529_p2 = ((knn_set_V_q1 < p_080_2_0_2_fu_522_p3) ? 1'b1 : 1'b0);

assign tmp_9_2_1_fu_581_p2 = ((knn_set_V_q1 < p_080_2_2_fu_574_p3) ? 1'b1 : 1'b0);

assign tmp_9_2_2_fu_595_p2 = ((knn_set_V_q0 < knn_set_V_load_7_080_2_2_reg_1624) ? 1'b1 : 1'b0);

assign tmp_9_2_fu_569_p2 = ((knn_set_V_q0 < p_080_2_1_2_reg_1607) ? 1'b1 : 1'b0);

assign tmp_9_3_1_fu_749_p2 = ((knn_set_V_q0 < p_080_2_3_reg_1642) ? 1'b1 : 1'b0);

assign tmp_9_3_2_fu_761_p2 = ((knn_set_V_q1 < knn_set_V_load_10_080_2_3_fu_754_p3) ? 1'b1 : 1'b0);

assign tmp_9_3_fu_607_p2 = ((knn_set_V_q1 < p_080_2_2_2_fu_600_p3) ? 1'b1 : 1'b0);

assign tmp_9_4_1_fu_787_p2 = ((knn_set_V_q1 < p_080_2_4_fu_780_p3) ? 1'b1 : 1'b0);

assign tmp_9_4_2_fu_869_p2 = ((knn_set_V_q0 < knn_set_V_load_13_080_2_4_reg_1691) ? 1'b1 : 1'b0);

assign tmp_9_4_fu_775_p2 = ((knn_set_V_q0 < p_080_2_3_2_reg_1674) ? 1'b1 : 1'b0);

assign tmp_9_5_1_fu_895_p2 = ((knn_set_V_q0 < p_080_2_5_reg_1719) ? 1'b1 : 1'b0);

assign tmp_9_5_2_fu_907_p2 = ((knn_set_V_q1 < knn_set_V_load_16_080_2_5_fu_900_p3) ? 1'b1 : 1'b0);

assign tmp_9_5_fu_881_p2 = ((knn_set_V_q1 < p_080_2_4_2_fu_874_p3) ? 1'b1 : 1'b0);

assign tmp_9_6_1_fu_970_p2 = ((knn_set_V_q1 < p_080_2_6_fu_963_p3) ? 1'b1 : 1'b0);

assign tmp_9_6_2_fu_1022_p2 = ((knn_set_V_q0 < knn_set_V_load_19_080_2_6_reg_1768) ? 1'b1 : 1'b0);

assign tmp_9_6_fu_958_p2 = ((knn_set_V_q0 < p_080_2_5_2_reg_1736) ? 1'b1 : 1'b0);

assign tmp_9_7_1_fu_1076_p2 = ((knn_set_V_q0 < p_080_2_7_reg_1796) ? 1'b1 : 1'b0);

assign tmp_9_7_2_fu_1088_p2 = ((knn_set_V_q1 < knn_set_V_load_22_080_2_7_fu_1081_p3) ? 1'b1 : 1'b0);

assign tmp_9_7_fu_1034_p2 = ((knn_set_V_q1 < p_080_2_6_2_fu_1027_p3) ? 1'b1 : 1'b0);

assign tmp_9_8_1_fu_1114_p2 = ((knn_set_V_q1 < p_080_2_8_fu_1107_p3) ? 1'b1 : 1'b0);

assign tmp_9_8_2_fu_1196_p2 = ((knn_set_V_q0 < knn_set_V_load_25_080_2_8_reg_1840) ? 1'b1 : 1'b0);

assign tmp_9_8_fu_1102_p2 = ((knn_set_V_q0 < p_080_2_7_2_reg_1823) ? 1'b1 : 1'b0);

assign tmp_9_9_1_fu_1226_p2 = ((knn_set_V_q0 < p_080_2_9_reg_1868) ? 1'b1 : 1'b0);

assign tmp_9_9_2_fu_1238_p2 = ((knn_set_V_q1 < knn_set_V_load_28_080_2_9_fu_1231_p3) ? 1'b1 : 1'b0);

assign tmp_9_9_fu_1208_p2 = ((knn_set_V_q1 < p_080_2_8_2_fu_1201_p3) ? 1'b1 : 1'b0);

assign tmp_9_fu_489_p2 = ((knn_set_V_q0 < 6'd50) ? 1'b1 : 1'b0);

assign tmp_fu_472_p1 = i_reg_402;

assign tmp_s_fu_1366_p1 = min_index_V_phi_fu_452_p4;

always @ (posedge ap_clk) begin
    p_072_2_2_reg_1648[2] <= 1'b0;
end

endmodule //knn_vote
