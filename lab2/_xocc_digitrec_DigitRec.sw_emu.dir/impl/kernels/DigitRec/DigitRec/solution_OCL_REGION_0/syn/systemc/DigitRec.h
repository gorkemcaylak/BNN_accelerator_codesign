// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _DigitRec_HH_
#define _DigitRec_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "knn_vote.h"
#include "update_knn.h"
#include "DigitRec_mac_muladd_4ns_12ns_11ns_15_1.h"
#include "DigitRec_knn_set_V.h"
#include "DigitRec_control_s_axi.h"
#include "DigitRec_gmem_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_ADDR_WIDTH = 64,
         unsigned int C_M_AXI_GMEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_DATA_WIDTH = 64,
         unsigned int C_M_AXI_GMEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32>
struct DigitRec : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_AWVALID;
    sc_in< sc_logic > m_axi_gmem_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_AWUSER_WIDTH> > m_axi_gmem_AWUSER;
    sc_out< sc_logic > m_axi_gmem_WVALID;
    sc_in< sc_logic > m_axi_gmem_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH/8> > m_axi_gmem_WSTRB;
    sc_out< sc_logic > m_axi_gmem_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_WUSER_WIDTH> > m_axi_gmem_WUSER;
    sc_out< sc_logic > m_axi_gmem_ARVALID;
    sc_in< sc_logic > m_axi_gmem_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_ARUSER_WIDTH> > m_axi_gmem_ARUSER;
    sc_in< sc_logic > m_axi_gmem_RVALID;
    sc_out< sc_logic > m_axi_gmem_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_RDATA;
    sc_in< sc_logic > m_axi_gmem_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_RUSER_WIDTH> > m_axi_gmem_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_RRESP;
    sc_in< sc_logic > m_axi_gmem_BVALID;
    sc_out< sc_logic > m_axi_gmem_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_BUSER_WIDTH> > m_axi_gmem_BUSER;
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const7;


    // Module declarations
    DigitRec(sc_module_name name);
    SC_HAS_PROCESS(DigitRec);

    ~DigitRec();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    DigitRec_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* DigitRec_control_s_axi_U;
    DigitRec_gmem_m_axi<64,64,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>* DigitRec_gmem_m_axi_U;
    DigitRec_knn_set_V* knn_set_V_U;
    knn_vote* grp_knn_vote_fu_272;
    update_knn* grp_update_knn_fu_277;
    DigitRec_mac_muladd_4ns_12ns_11ns_15_1<1,1,4,12,11,15>* DigitRec_mac_muladd_4ns_12ns_11ns_15_1_U7;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<32> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<64> > training_data_V;
    sc_signal< sc_lv<64> > testing_data_V;
    sc_signal< sc_lv<64> > results_V;
    sc_signal< sc_logic > gmem_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > gmem_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage3;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_pp1_stage3;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_604;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< bool > ap_block_pp1_stage2;
    sc_signal< sc_lv<1> > ap_reg_pp1_iter2_exitcond_flatten_reg_604;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_logic > gmem_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_logic > gmem_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_logic > gmem_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_logic > gmem_AWVALID;
    sc_signal< sc_logic > gmem_AWREADY;
    sc_signal< sc_logic > gmem_WVALID;
    sc_signal< sc_logic > gmem_WREADY;
    sc_signal< sc_logic > gmem_ARVALID;
    sc_signal< sc_logic > gmem_ARREADY;
    sc_signal< sc_lv<64> > gmem_ARADDR;
    sc_signal< sc_logic > gmem_RVALID;
    sc_signal< sc_logic > gmem_RREADY;
    sc_signal< sc_lv<64> > gmem_RDATA;
    sc_signal< sc_logic > gmem_RLAST;
    sc_signal< sc_lv<1> > gmem_RID;
    sc_signal< sc_lv<1> > gmem_RUSER;
    sc_signal< sc_lv<2> > gmem_RRESP;
    sc_signal< sc_logic > gmem_BVALID;
    sc_signal< sc_logic > gmem_BREADY;
    sc_signal< sc_lv<2> > gmem_BRESP;
    sc_signal< sc_lv<1> > gmem_BID;
    sc_signal< sc_lv<1> > gmem_BUSER;
    sc_signal< sc_lv<15> > indvar_flatten_reg_239;
    sc_signal< sc_lv<11> > i1_reg_250;
    sc_signal< sc_lv<4> > j_reg_261;
    sc_signal< sc_lv<62> > tmp_47_cast_fu_295_p1;
    sc_signal< sc_lv<62> > tmp_47_cast_reg_557;
    sc_signal< sc_lv<62> > tmp_48_cast_fu_309_p1;
    sc_signal< sc_lv<62> > tmp_48_cast_reg_562;
    sc_signal< sc_lv<62> > tmp_49_cast_fu_323_p1;
    sc_signal< sc_lv<62> > tmp_49_cast_reg_567;
    sc_signal< sc_lv<8> > k_2_fu_333_p2;
    sc_signal< sc_lv<8> > k_2_reg_575;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<62> > testing_data_V4_sum_fu_343_p2;
    sc_signal< sc_lv<62> > testing_data_V4_sum_reg_580;
    sc_signal< sc_lv<1> > exitcond6_fu_327_p2;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_ARREADY;
    sc_signal< sc_lv<64> > testing_instance_V_reg_591;
    sc_signal< sc_lv<5> > i_3_fu_364_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_375_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state13_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state17_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state21_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state25_pp1_stage0_iter3;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp1_iter1_exitcond_flatten_reg_604;
    sc_signal< sc_lv<1> > ap_reg_pp1_iter3_exitcond_flatten_reg_604;
    sc_signal< sc_lv<15> > indvar_flatten_next_fu_381_p2;
    sc_signal< sc_lv<15> > indvar_flatten_next_reg_608;
    sc_signal< sc_lv<4> > j_mid2_fu_393_p3;
    sc_signal< sc_lv<4> > j_mid2_reg_613;
    sc_signal< sc_lv<4> > ap_reg_pp1_iter1_j_mid2_reg_613;
    sc_signal< sc_lv<4> > ap_reg_pp1_iter2_j_mid2_reg_613;
    sc_signal< sc_lv<11> > i1_cast4_mid2_v_fu_407_p3;
    sc_signal< sc_lv<11> > i1_cast4_mid2_v_reg_621;
    sc_signal< sc_lv<15> > grp_fu_549_p3;
    sc_signal< sc_lv<15> > tmp_4_reg_627;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< bool > ap_block_state14_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state18_pp1_stage1_iter1;
    sc_signal< bool > ap_block_state22_pp1_stage1_iter2;
    sc_signal< bool > ap_block_state26_pp1_stage1_iter3;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<62> > training_data_V2_sum_fu_424_p2;
    sc_signal< sc_lv<62> > training_data_V2_sum_reg_632;
    sc_signal< bool > ap_block_state15_pp1_stage2_iter0;
    sc_signal< bool > ap_block_state19_pp1_stage2_iter1;
    sc_signal< bool > ap_block_state23_pp1_stage2_iter2;
    sc_signal< bool > ap_block_state27_pp1_stage2_iter3;
    sc_signal< bool > ap_block_pp1_stage2_11001;
    sc_signal< bool > ap_block_state16_pp1_stage3_iter0;
    sc_signal< bool > ap_block_state16_io;
    sc_signal< bool > ap_block_state20_pp1_stage3_iter1;
    sc_signal< bool > ap_block_state24_pp1_stage3_iter2;
    sc_signal< bool > ap_block_pp1_stage3_11001;
    sc_signal< sc_lv<4> > j_1_fu_439_p2;
    sc_signal< sc_lv<4> > j_1_reg_643;
    sc_signal< sc_lv<64> > training_instance_V_reg_648;
    sc_signal< sc_lv<7> > tmp_6_fu_458_p2;
    sc_signal< sc_lv<7> > tmp_6_reg_653;
    sc_signal< sc_lv<62> > results_V6_sum_fu_486_p2;
    sc_signal< sc_lv<62> > results_V6_sum_reg_658;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<4> > tmp_57_fu_491_p1;
    sc_signal< sc_lv<4> > tmp_57_reg_663;
    sc_signal< sc_lv<64> > gmem_addr_1_reg_668;
    sc_signal< sc_lv<64> > gmem_addr_1_read_reg_675;
    sc_signal< sc_lv<64> > tmp_65_fu_543_p2;
    sc_signal< sc_lv<64> > tmp_65_reg_680;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_AWREADY;
    sc_signal< sc_logic > grp_knn_vote_fu_272_ap_done;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state13;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage3_subdone;
    sc_signal< bool > ap_block_pp1_stage2_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_lv<5> > knn_set_V_address0;
    sc_signal< sc_logic > knn_set_V_ce0;
    sc_signal< sc_logic > knn_set_V_we0;
    sc_signal< sc_lv<6> > knn_set_V_d0;
    sc_signal< sc_lv<6> > knn_set_V_q0;
    sc_signal< sc_lv<5> > knn_set_V_address1;
    sc_signal< sc_logic > knn_set_V_ce1;
    sc_signal< sc_logic > knn_set_V_we1;
    sc_signal< sc_lv<6> > knn_set_V_q1;
    sc_signal< sc_logic > grp_knn_vote_fu_272_ap_start;
    sc_signal< sc_logic > grp_knn_vote_fu_272_ap_idle;
    sc_signal< sc_logic > grp_knn_vote_fu_272_ap_ready;
    sc_signal< sc_lv<5> > grp_knn_vote_fu_272_knn_set_V_address0;
    sc_signal< sc_logic > grp_knn_vote_fu_272_knn_set_V_ce0;
    sc_signal< sc_logic > grp_knn_vote_fu_272_knn_set_V_we0;
    sc_signal< sc_lv<6> > grp_knn_vote_fu_272_knn_set_V_d0;
    sc_signal< sc_lv<5> > grp_knn_vote_fu_272_knn_set_V_address1;
    sc_signal< sc_logic > grp_knn_vote_fu_272_knn_set_V_ce1;
    sc_signal< sc_lv<4> > grp_knn_vote_fu_272_ap_return;
    sc_signal< sc_logic > grp_update_knn_fu_277_ap_start;
    sc_signal< sc_logic > grp_update_knn_fu_277_ap_done;
    sc_signal< sc_logic > grp_update_knn_fu_277_ap_idle;
    sc_signal< sc_logic > grp_update_knn_fu_277_ap_ready;
    sc_signal< sc_lv<5> > grp_update_knn_fu_277_min_distances_V_address0;
    sc_signal< sc_logic > grp_update_knn_fu_277_min_distances_V_ce0;
    sc_signal< sc_lv<5> > grp_update_knn_fu_277_min_distances_V_address1;
    sc_signal< sc_logic > grp_update_knn_fu_277_min_distances_V_ce1;
    sc_signal< sc_logic > grp_update_knn_fu_277_min_distances_V_we1;
    sc_signal< sc_lv<6> > grp_update_knn_fu_277_min_distances_V_d1;
    sc_signal< sc_lv<64> > grp_update_knn_fu_277_min_distances_V_offset;
    sc_signal< sc_logic > grp_update_knn_fu_277_ap_ce;
    sc_signal< sc_lv<8> > k_reg_216;
    sc_signal< sc_lv<5> > i_reg_228;
    sc_signal< sc_lv<1> > exitcond7_fu_358_p2;
    sc_signal< sc_lv<15> > indvar_flatten_phi_fu_243_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<11> > i1_phi_fu_254_p4;
    sc_signal< sc_lv<4> > j_phi_fu_265_p4;
    sc_signal< sc_logic > ap_reg_grp_knn_vote_fu_272_ap_start;
    sc_signal< sc_logic > ap_reg_grp_update_knn_fu_277_ap_start;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<64> > tmp_s_fu_370_p1;
    sc_signal< sc_lv<64> > testing_data_V4_sum_cast_fu_348_p1;
    sc_signal< sc_lv<64> > training_data_V2_sum_cast_fu_429_p1;
    sc_signal< sc_lv<64> > results_V6_sum_cast_fu_495_p1;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_ARREADY;
    sc_signal< bool > ap_block_pp1_stage3_01001;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_WREADY;
    sc_signal< sc_lv<61> > tmp_fu_285_p4;
    sc_signal< sc_lv<61> > tmp_54_fu_299_p4;
    sc_signal< sc_lv<61> > tmp_55_fu_313_p4;
    sc_signal< sc_lv<62> > tmp_cast_fu_339_p1;
    sc_signal< sc_lv<1> > exitcond_fu_387_p2;
    sc_signal< sc_lv<11> > i_s_fu_401_p2;
    sc_signal< sc_lv<62> > tmp_5_cast_fu_421_p1;
    sc_signal< sc_lv<6> > p_shl_fu_447_p3;
    sc_signal< sc_lv<7> > p_shl_cast_fu_454_p1;
    sc_signal< sc_lv<7> > j_cast2_fu_444_p1;
    sc_signal< sc_lv<32> > tmp_13_cast_fu_464_p1;
    sc_signal< sc_lv<4> > tmp_56_fu_472_p4;
    sc_signal< sc_lv<62> > tmp1_cast_fu_482_p1;
    sc_signal< sc_lv<6> > tmp_58_fu_505_p3;
    sc_signal< sc_lv<64> > tmp_59_fu_512_p1;
    sc_signal< sc_lv<64> > tmp_60_fu_516_p2;
    sc_signal< sc_lv<64> > tmp_61_fu_522_p2;
    sc_signal< sc_lv<64> > tmp_63_fu_533_p1;
    sc_signal< sc_lv<64> > tmp_62_fu_528_p2;
    sc_signal< sc_lv<64> > tmp_64_fu_537_p2;
    sc_signal< sc_lv<4> > grp_fu_549_p0;
    sc_signal< sc_lv<12> > grp_fu_549_p1;
    sc_signal< sc_lv<11> > grp_fu_549_p2;
    sc_signal< sc_lv<32> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_lv<15> > grp_fu_549_p00;
    sc_signal< sc_lv<15> > grp_fu_549_p20;
    sc_signal< bool > ap_condition_615;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_ST_fsm_state1;
    static const sc_lv<32> ap_ST_fsm_state2;
    static const sc_lv<32> ap_ST_fsm_state3;
    static const sc_lv<32> ap_ST_fsm_state4;
    static const sc_lv<32> ap_ST_fsm_state5;
    static const sc_lv<32> ap_ST_fsm_state6;
    static const sc_lv<32> ap_ST_fsm_state7;
    static const sc_lv<32> ap_ST_fsm_state8;
    static const sc_lv<32> ap_ST_fsm_state9;
    static const sc_lv<32> ap_ST_fsm_state10;
    static const sc_lv<32> ap_ST_fsm_state11;
    static const sc_lv<32> ap_ST_fsm_state12;
    static const sc_lv<32> ap_ST_fsm_pp1_stage0;
    static const sc_lv<32> ap_ST_fsm_pp1_stage1;
    static const sc_lv<32> ap_ST_fsm_pp1_stage2;
    static const sc_lv<32> ap_ST_fsm_pp1_stage3;
    static const sc_lv<32> ap_ST_fsm_state28;
    static const sc_lv<32> ap_ST_fsm_state29;
    static const sc_lv<32> ap_ST_fsm_state30;
    static const sc_lv<32> ap_ST_fsm_state31;
    static const sc_lv<32> ap_ST_fsm_state32;
    static const sc_lv<32> ap_ST_fsm_state33;
    static const sc_lv<32> ap_ST_fsm_state34;
    static const sc_lv<32> ap_ST_fsm_state35;
    static const sc_lv<32> ap_ST_fsm_state36;
    static const sc_lv<32> ap_ST_fsm_state37;
    static const sc_lv<32> ap_ST_fsm_state38;
    static const sc_lv<32> ap_ST_fsm_state39;
    static const sc_lv<32> ap_ST_fsm_state40;
    static const sc_lv<32> ap_ST_fsm_state41;
    static const sc_lv<32> ap_ST_fsm_state42;
    static const sc_lv<32> ap_ST_fsm_state43;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_F;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1F;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_USER_VALUE;
    static const int C_M_AXI_GMEM_PROT_VALUE;
    static const int C_M_AXI_GMEM_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<8> ap_const_lv8_B4;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<15> ap_const_lv15_4650;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFFFF;
    static const sc_lv<15> ap_const_lv15_708;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const7();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_pp1_stage2();
    void thread_ap_CS_fsm_pp1_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state43();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_pp1_stage2();
    void thread_ap_block_pp1_stage2_11001();
    void thread_ap_block_pp1_stage2_subdone();
    void thread_ap_block_pp1_stage3();
    void thread_ap_block_pp1_stage3_01001();
    void thread_ap_block_pp1_stage3_11001();
    void thread_ap_block_pp1_stage3_subdone();
    void thread_ap_block_state13_pp1_stage0_iter0();
    void thread_ap_block_state14_pp1_stage1_iter0();
    void thread_ap_block_state15_pp1_stage2_iter0();
    void thread_ap_block_state16_io();
    void thread_ap_block_state16_pp1_stage3_iter0();
    void thread_ap_block_state17_pp1_stage0_iter1();
    void thread_ap_block_state18_pp1_stage1_iter1();
    void thread_ap_block_state19_pp1_stage2_iter1();
    void thread_ap_block_state20_pp1_stage3_iter1();
    void thread_ap_block_state21_pp1_stage0_iter2();
    void thread_ap_block_state22_pp1_stage1_iter2();
    void thread_ap_block_state23_pp1_stage2_iter2();
    void thread_ap_block_state24_pp1_stage3_iter2();
    void thread_ap_block_state25_pp1_stage0_iter3();
    void thread_ap_block_state26_pp1_stage1_iter3();
    void thread_ap_block_state27_pp1_stage2_iter3();
    void thread_ap_condition_615();
    void thread_ap_condition_pp1_exit_iter0_state13();
    void thread_ap_done();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp1();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_gmem_ARREADY();
    void thread_ap_sig_ioackin_gmem_AWREADY();
    void thread_ap_sig_ioackin_gmem_WREADY();
    void thread_exitcond6_fu_327_p2();
    void thread_exitcond7_fu_358_p2();
    void thread_exitcond_flatten_fu_375_p2();
    void thread_exitcond_fu_387_p2();
    void thread_gmem_ARADDR();
    void thread_gmem_ARVALID();
    void thread_gmem_AWVALID();
    void thread_gmem_BREADY();
    void thread_gmem_RREADY();
    void thread_gmem_WVALID();
    void thread_gmem_blk_n_AR();
    void thread_gmem_blk_n_AW();
    void thread_gmem_blk_n_B();
    void thread_gmem_blk_n_R();
    void thread_gmem_blk_n_W();
    void thread_grp_fu_549_p0();
    void thread_grp_fu_549_p00();
    void thread_grp_fu_549_p1();
    void thread_grp_fu_549_p2();
    void thread_grp_fu_549_p20();
    void thread_grp_knn_vote_fu_272_ap_start();
    void thread_grp_update_knn_fu_277_ap_ce();
    void thread_grp_update_knn_fu_277_ap_start();
    void thread_grp_update_knn_fu_277_min_distances_V_offset();
    void thread_i1_cast4_mid2_v_fu_407_p3();
    void thread_i1_phi_fu_254_p4();
    void thread_i_3_fu_364_p2();
    void thread_i_s_fu_401_p2();
    void thread_indvar_flatten_next_fu_381_p2();
    void thread_indvar_flatten_phi_fu_243_p4();
    void thread_j_1_fu_439_p2();
    void thread_j_cast2_fu_444_p1();
    void thread_j_mid2_fu_393_p3();
    void thread_j_phi_fu_265_p4();
    void thread_k_2_fu_333_p2();
    void thread_knn_set_V_address0();
    void thread_knn_set_V_address1();
    void thread_knn_set_V_ce0();
    void thread_knn_set_V_ce1();
    void thread_knn_set_V_d0();
    void thread_knn_set_V_we0();
    void thread_knn_set_V_we1();
    void thread_p_shl_cast_fu_454_p1();
    void thread_p_shl_fu_447_p3();
    void thread_results_V6_sum_cast_fu_495_p1();
    void thread_results_V6_sum_fu_486_p2();
    void thread_testing_data_V4_sum_cast_fu_348_p1();
    void thread_testing_data_V4_sum_fu_343_p2();
    void thread_tmp1_cast_fu_482_p1();
    void thread_tmp_13_cast_fu_464_p1();
    void thread_tmp_47_cast_fu_295_p1();
    void thread_tmp_48_cast_fu_309_p1();
    void thread_tmp_49_cast_fu_323_p1();
    void thread_tmp_54_fu_299_p4();
    void thread_tmp_55_fu_313_p4();
    void thread_tmp_56_fu_472_p4();
    void thread_tmp_57_fu_491_p1();
    void thread_tmp_58_fu_505_p3();
    void thread_tmp_59_fu_512_p1();
    void thread_tmp_5_cast_fu_421_p1();
    void thread_tmp_60_fu_516_p2();
    void thread_tmp_61_fu_522_p2();
    void thread_tmp_62_fu_528_p2();
    void thread_tmp_63_fu_533_p1();
    void thread_tmp_64_fu_537_p2();
    void thread_tmp_65_fu_543_p2();
    void thread_tmp_6_fu_458_p2();
    void thread_tmp_cast_fu_339_p1();
    void thread_tmp_fu_285_p4();
    void thread_tmp_s_fu_370_p1();
    void thread_training_data_V2_sum_cast_fu_429_p1();
    void thread_training_data_V2_sum_fu_424_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
