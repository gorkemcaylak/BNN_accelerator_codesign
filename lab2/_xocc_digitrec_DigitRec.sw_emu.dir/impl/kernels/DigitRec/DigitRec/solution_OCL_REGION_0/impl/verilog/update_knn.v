// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module update_knn (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        test_inst_V,
        train_inst_V,
        min_distances_V_address0,
        min_distances_V_ce0,
        min_distances_V_q0,
        min_distances_V_address1,
        min_distances_V_ce1,
        min_distances_V_we1,
        min_distances_V_d1,
        min_distances_V_q1,
        min_distances_V_offset,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] test_inst_V;
input  [63:0] train_inst_V;
output  [4:0] min_distances_V_address0;
output   min_distances_V_ce0;
input  [5:0] min_distances_V_q0;
output  [4:0] min_distances_V_address1;
output   min_distances_V_ce1;
output   min_distances_V_we1;
output  [5:0] min_distances_V_d1;
input  [5:0] min_distances_V_q1;
input  [63:0] min_distances_V_offset;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] min_distances_V_address0;
reg min_distances_V_ce0;
reg[4:0] min_distances_V_address1;
reg min_distances_V_ce1;
reg min_distances_V_we1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] tmp_52_fu_204_p1;
reg   [5:0] tmp_52_reg_1321;
wire   [5:0] sum_1_fu_208_p2;
reg   [5:0] sum_1_reg_1327;
wire   [31:0] tmp_53_fu_219_p1;
reg   [31:0] tmp_53_reg_1337;
wire   [0:0] tmp_s_fu_223_p2;
reg   [0:0] tmp_s_reg_1342;
wire    ap_CS_fsm_state2;
wire   [0:0] grp_fu_198_p2;
reg   [0:0] tmp_6_1_reg_1347;
wire   [31:0] p_018_1_1_fu_232_p3;
reg   [31:0] p_018_1_1_reg_1352;
wire   [5:0] sum_2_fu_244_p2;
reg   [5:0] sum_2_reg_1362;
wire   [4:0] tmp22_fu_1032_p2;
reg   [4:0] tmp22_reg_1372;
wire    ap_CS_fsm_state3;
wire   [4:0] tmp46_fu_1236_p2;
reg   [4:0] tmp46_reg_1377;
reg   [0:0] tmp_6_2_reg_1382;
reg   [63:0] ap_port_reg_test_inst_V;
reg   [63:0] ap_port_reg_train_inst_V;
wire   [63:0] sum_1_cast_fu_214_p1;
wire   [63:0] p_018_1_1_cast_fu_239_p1;
wire   [63:0] sum_2_cast_fu_249_p1;
wire   [63:0] min_distances_V_load_2_018_1_1_cast_fu_1252_p1;
wire   [63:0] sum2_cast_fu_1311_p1;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_4_fu_1296_p2;
wire   [5:0] dist_V_s_fu_1263_p2;
wire   [31:0] sum_1_cast_cast_fu_229_p1;
wire   [63:0] r_V_fu_254_p2;
wire   [0:0] tmp_2_fu_260_p1;
wire   [0:0] tmp_3_fu_268_p3;
wire   [0:0] tmp_5_fu_280_p3;
wire   [0:0] tmp_6_fu_292_p3;
wire   [0:0] tmp_7_fu_304_p3;
wire   [0:0] tmp_8_fu_316_p3;
wire   [0:0] tmp_9_fu_328_p3;
wire   [0:0] tmp_10_fu_340_p3;
wire   [0:0] tmp_11_fu_352_p3;
wire   [0:0] tmp_12_fu_364_p3;
wire   [0:0] tmp_13_fu_376_p3;
wire   [0:0] tmp_14_fu_388_p3;
wire   [0:0] tmp_15_fu_400_p3;
wire   [0:0] tmp_16_fu_412_p3;
wire   [0:0] tmp_17_fu_424_p3;
wire   [0:0] tmp_18_fu_436_p3;
wire   [0:0] tmp_19_fu_448_p3;
wire   [0:0] tmp_20_fu_460_p3;
wire   [0:0] tmp_21_fu_472_p3;
wire   [0:0] tmp_22_fu_484_p3;
wire   [0:0] tmp_23_fu_496_p3;
wire   [0:0] tmp_24_fu_508_p3;
wire   [0:0] tmp_25_fu_520_p3;
wire   [0:0] tmp_26_fu_532_p3;
wire   [0:0] tmp_27_fu_544_p3;
wire   [0:0] tmp_28_fu_556_p3;
wire   [0:0] tmp_29_fu_568_p3;
wire   [0:0] tmp_30_fu_580_p3;
wire   [0:0] tmp_31_fu_592_p3;
wire   [0:0] tmp_32_fu_604_p3;
wire   [0:0] tmp_33_fu_616_p3;
wire   [0:0] tmp_34_fu_628_p3;
wire   [0:0] tmp_35_fu_640_p3;
wire   [0:0] tmp_36_fu_652_p3;
wire   [0:0] tmp_37_fu_664_p3;
wire   [0:0] tmp_38_fu_676_p3;
wire   [0:0] tmp_39_fu_688_p3;
wire   [0:0] tmp_40_fu_700_p3;
wire   [0:0] tmp_41_fu_712_p3;
wire   [0:0] tmp_42_fu_724_p3;
wire   [0:0] tmp_43_fu_736_p3;
wire   [0:0] tmp_44_fu_748_p3;
wire   [0:0] tmp_45_fu_760_p3;
wire   [0:0] tmp_46_fu_772_p3;
wire   [0:0] tmp_47_fu_784_p3;
wire   [0:0] tmp_48_fu_796_p3;
wire   [0:0] tmp_49_fu_808_p3;
wire   [0:0] tmp_50_fu_820_p3;
wire   [0:0] tmp_51_fu_832_p3;
wire   [1:0] tmp_49_cast_fu_804_p1;
wire   [1:0] tmp_47_cast_fu_828_p1;
wire   [1:0] tmp_46_cast_fu_816_p1;
wire   [1:0] tmp_fu_844_p2;
wire   [1:0] tmp1_fu_850_p2;
wire   [1:0] tmp_43_cast_fu_780_p1;
wire   [1:0] tmp_44_cast_fu_792_p1;
wire   [1:0] tmp_42_cast_fu_768_p1;
wire   [1:0] tmp2_fu_860_p2;
wire   [1:0] tmp3_fu_866_p2;
wire   [2:0] tmp50_cast_fu_856_p1;
wire   [2:0] tmp52_cast_fu_872_p1;
wire   [2:0] tmp4_fu_876_p2;
wire   [1:0] tmp_37_cast_fu_708_p1;
wire   [1:0] tmp_38_cast_fu_720_p1;
wire   [1:0] tmp_36_cast_fu_696_p1;
wire   [1:0] tmp5_fu_886_p2;
wire   [1:0] tmp6_fu_892_p2;
wire   [1:0] tmp_40_cast_fu_744_p1;
wire   [1:0] tmp_41_cast_fu_756_p1;
wire   [1:0] tmp_39_cast_fu_732_p1;
wire   [1:0] tmp7_fu_902_p2;
wire   [1:0] tmp8_fu_908_p2;
wire   [2:0] tmp55_cast_fu_898_p1;
wire   [2:0] tmp57_cast_fu_914_p1;
wire   [2:0] tmp9_fu_918_p2;
wire   [3:0] tmp49_cast_fu_882_p1;
wire   [3:0] tmp54_cast_fu_924_p1;
wire   [3:0] tmp10_fu_928_p2;
wire   [1:0] tmp_25_cast_fu_564_p1;
wire   [1:0] tmp_26_cast_fu_576_p1;
wire   [1:0] tmp_24_cast_fu_552_p1;
wire   [1:0] tmp11_fu_938_p2;
wire   [1:0] tmp12_fu_944_p2;
wire   [1:0] tmp_28_cast_fu_600_p1;
wire   [1:0] tmp_29_cast_fu_612_p1;
wire   [1:0] tmp_27_cast_fu_588_p1;
wire   [1:0] tmp13_fu_954_p2;
wire   [1:0] tmp14_fu_960_p2;
wire   [2:0] tmp61_cast_fu_950_p1;
wire   [2:0] tmp63_cast_fu_966_p1;
wire   [2:0] tmp15_fu_970_p2;
wire   [1:0] tmp_31_cast_fu_636_p1;
wire   [1:0] tmp_32_cast_fu_648_p1;
wire   [1:0] tmp_30_cast_fu_624_p1;
wire   [1:0] tmp16_fu_980_p2;
wire   [1:0] tmp17_fu_986_p2;
wire   [1:0] tmp_34_cast_fu_672_p1;
wire   [1:0] tmp_35_cast_fu_684_p1;
wire   [1:0] tmp_33_cast_fu_660_p1;
wire   [1:0] tmp18_fu_996_p2;
wire   [1:0] tmp19_fu_1002_p2;
wire   [2:0] tmp66_cast_fu_992_p1;
wire   [2:0] tmp68_cast_fu_1008_p1;
wire   [2:0] tmp20_fu_1012_p2;
wire   [3:0] tmp60_cast_fu_976_p1;
wire   [3:0] tmp65_cast_fu_1018_p1;
wire   [3:0] tmp21_fu_1022_p2;
wire   [4:0] tmp48_cast_fu_934_p1;
wire   [4:0] tmp59_cast_fu_1028_p1;
wire   [1:0] tmp_cast_fu_264_p1;
wire   [1:0] tmp_2_cast_fu_288_p1;
wire   [1:0] tmp_cast_7_fu_276_p1;
wire   [1:0] tmp23_fu_1038_p2;
wire   [1:0] tmp24_fu_1044_p2;
wire   [1:0] tmp_1_cast_fu_312_p1;
wire   [1:0] tmp_5_cast_fu_324_p1;
wire   [1:0] tmp_3_cast_fu_300_p1;
wire   [1:0] tmp25_fu_1054_p2;
wire   [1:0] tmp26_fu_1060_p2;
wire   [2:0] tmp73_cast_fu_1050_p1;
wire   [2:0] tmp75_cast_fu_1066_p1;
wire   [2:0] tmp27_fu_1070_p2;
wire   [1:0] tmp_14_cast_fu_348_p1;
wire   [1:0] tmp_8_cast_fu_360_p1;
wire   [1:0] tmp_6_cast_fu_336_p1;
wire   [1:0] tmp28_fu_1080_p2;
wire   [1:0] tmp29_fu_1086_p2;
wire   [1:0] tmp_10_cast_fu_384_p1;
wire   [1:0] tmp_11_cast_fu_396_p1;
wire   [1:0] tmp_9_cast_fu_372_p1;
wire   [1:0] tmp30_fu_1096_p2;
wire   [1:0] tmp31_fu_1102_p2;
wire   [2:0] tmp78_cast_fu_1092_p1;
wire   [2:0] tmp80_cast_fu_1108_p1;
wire   [2:0] tmp32_fu_1112_p2;
wire   [3:0] tmp72_cast_fu_1076_p1;
wire   [3:0] tmp77_cast_fu_1118_p1;
wire   [3:0] tmp33_fu_1122_p2;
wire   [1:0] tmp_13_cast_fu_420_p1;
wire   [1:0] tmp_45_cast_fu_432_p1;
wire   [1:0] tmp_12_cast_fu_408_p1;
wire   [1:0] tmp34_fu_1132_p2;
wire   [1:0] tmp35_fu_1138_p2;
wire   [1:0] tmp_16_cast_fu_456_p1;
wire   [1:0] tmp_17_cast_fu_468_p1;
wire   [1:0] tmp_15_cast_fu_444_p1;
wire   [1:0] tmp36_fu_1148_p2;
wire   [1:0] tmp37_fu_1154_p2;
wire   [2:0] tmp84_cast_fu_1144_p1;
wire   [2:0] tmp86_cast_fu_1160_p1;
wire   [2:0] tmp38_fu_1164_p2;
wire   [1:0] tmp_19_cast_fu_492_p1;
wire   [1:0] tmp_20_cast_fu_504_p1;
wire   [1:0] tmp_18_cast_fu_480_p1;
wire   [1:0] tmp39_fu_1174_p2;
wire   [1:0] tmp40_fu_1180_p2;
wire   [1:0] tmp_23_cast_fu_540_p1;
wire   [1:0] tmp_21_cast_fu_516_p1;
wire   [1:0] tmp41_fu_1190_p2;
wire   [1:0] tmp_48_cast_fu_840_p1;
wire   [1:0] tmp_22_cast_fu_528_p1;
wire   [1:0] tmp42_fu_1200_p2;
wire   [2:0] tmp92_cast_fu_1196_p1;
wire   [2:0] tmp93_cast_fu_1206_p1;
wire   [2:0] tmp89_cast_fu_1186_p1;
wire   [2:0] tmp43_fu_1210_p2;
wire   [2:0] tmp44_fu_1216_p2;
wire   [3:0] tmp83_cast_fu_1170_p1;
wire   [3:0] tmp88_cast_fu_1222_p1;
wire   [3:0] tmp45_fu_1226_p2;
wire   [4:0] tmp71_cast_fu_1128_p1;
wire   [4:0] tmp82_cast_fu_1232_p1;
wire   [31:0] sum_2_cast_cast_fu_1242_p1;
wire   [31:0] min_distances_V_load_2_018_1_1_fu_1245_p3;
wire   [5:0] tmp47_cast_fu_1257_p1;
wire   [5:0] tmp70_cast_fu_1260_p1;
wire   [0:0] tmp_1_fu_1284_p2;
wire   [2:0] max_dist_id_1_1_cast_cast_fu_1277_p3;
wire   [2:0] p_s_fu_1270_p3;
wire   [2:0] p_max_dist_id_1_1_fu_1288_p3;
wire   [5:0] tmp_7_cast_fu_1302_p1;
wire   [5:0] sum2_fu_1306_p2;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (ap_ce == 1'b1))) begin
        ap_port_reg_test_inst_V <= test_inst_V;
        ap_port_reg_train_inst_V <= train_inst_V;
        sum_1_reg_1327 <= sum_1_fu_208_p2;
        tmp_52_reg_1321 <= tmp_52_fu_204_p1;
        tmp_53_reg_1337 <= tmp_53_fu_219_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_018_1_1_reg_1352 <= p_018_1_1_fu_232_p3;
        sum_2_reg_1362 <= sum_2_fu_244_p2;
        tmp_6_1_reg_1347 <= grp_fu_198_p2;
        tmp_s_reg_1342 <= tmp_s_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp22_reg_1372 <= tmp22_fu_1032_p2;
        tmp46_reg_1377 <= tmp46_fu_1236_p2;
        tmp_6_2_reg_1382 <= grp_fu_198_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        min_distances_V_address0 = min_distances_V_load_2_018_1_1_cast_fu_1252_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        min_distances_V_address0 = p_018_1_1_cast_fu_239_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        min_distances_V_address0 = min_distances_V_offset;
    end else begin
        min_distances_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        min_distances_V_address1 = sum2_cast_fu_1311_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        min_distances_V_address1 = sum_2_cast_fu_249_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        min_distances_V_address1 = sum_1_cast_fu_214_p1;
    end else begin
        min_distances_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (ap_ce == 1'b1)) | ((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        min_distances_V_ce0 = 1'b1;
    end else begin
        min_distances_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (ap_ce == 1'b1)) | ((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        min_distances_V_ce1 = 1'b1;
    end else begin
        min_distances_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state4) & (tmp_4_fu_1296_p2 == 1'd1))) begin
        min_distances_V_we1 = 1'b1;
    end else begin
        min_distances_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (ap_ce == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((ap_ce == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign dist_V_s_fu_1263_p2 = (tmp47_cast_fu_1257_p1 + tmp70_cast_fu_1260_p1);

assign grp_fu_198_p2 = ((min_distances_V_q1 > min_distances_V_q0) ? 1'b1 : 1'b0);

assign max_dist_id_1_1_cast_cast_fu_1277_p3 = ((tmp_6_2_reg_1382[0:0] === 1'b1) ? 3'd2 : 3'd1);

assign min_distances_V_d1 = dist_V_s_fu_1263_p2;

assign min_distances_V_load_2_018_1_1_cast_fu_1252_p1 = min_distances_V_load_2_018_1_1_fu_1245_p3;

assign min_distances_V_load_2_018_1_1_fu_1245_p3 = ((grp_fu_198_p2[0:0] === 1'b1) ? sum_2_cast_cast_fu_1242_p1 : p_018_1_1_reg_1352);

assign p_018_1_1_cast_fu_239_p1 = p_018_1_1_fu_232_p3;

assign p_018_1_1_fu_232_p3 = ((grp_fu_198_p2[0:0] === 1'b1) ? sum_1_cast_cast_fu_229_p1 : tmp_53_reg_1337);

assign p_max_dist_id_1_1_fu_1288_p3 = ((tmp_1_fu_1284_p2[0:0] === 1'b1) ? max_dist_id_1_1_cast_cast_fu_1277_p3 : p_s_fu_1270_p3);

assign p_s_fu_1270_p3 = ((tmp_s_reg_1342[0:0] === 1'b1) ? 3'd4 : 3'd0);

assign r_V_fu_254_p2 = (ap_port_reg_train_inst_V ^ ap_port_reg_test_inst_V);

assign sum2_cast_fu_1311_p1 = sum2_fu_1306_p2;

assign sum2_fu_1306_p2 = (tmp_7_cast_fu_1302_p1 + tmp_52_reg_1321);

assign sum_1_cast_cast_fu_229_p1 = sum_1_reg_1327;

assign sum_1_cast_fu_214_p1 = sum_1_fu_208_p2;

assign sum_1_fu_208_p2 = (6'd1 + tmp_52_fu_204_p1);

assign sum_2_cast_cast_fu_1242_p1 = sum_2_reg_1362;

assign sum_2_cast_fu_249_p1 = sum_2_fu_244_p2;

assign sum_2_fu_244_p2 = (6'd2 + tmp_52_reg_1321);

assign tmp10_fu_928_p2 = (tmp49_cast_fu_882_p1 + tmp54_cast_fu_924_p1);

assign tmp11_fu_938_p2 = (tmp_25_cast_fu_564_p1 + tmp_26_cast_fu_576_p1);

assign tmp12_fu_944_p2 = (tmp_24_cast_fu_552_p1 + tmp11_fu_938_p2);

assign tmp13_fu_954_p2 = (tmp_28_cast_fu_600_p1 + tmp_29_cast_fu_612_p1);

assign tmp14_fu_960_p2 = (tmp_27_cast_fu_588_p1 + tmp13_fu_954_p2);

assign tmp15_fu_970_p2 = (tmp61_cast_fu_950_p1 + tmp63_cast_fu_966_p1);

assign tmp16_fu_980_p2 = (tmp_31_cast_fu_636_p1 + tmp_32_cast_fu_648_p1);

assign tmp17_fu_986_p2 = (tmp_30_cast_fu_624_p1 + tmp16_fu_980_p2);

assign tmp18_fu_996_p2 = (tmp_34_cast_fu_672_p1 + tmp_35_cast_fu_684_p1);

assign tmp19_fu_1002_p2 = (tmp_33_cast_fu_660_p1 + tmp18_fu_996_p2);

assign tmp1_fu_850_p2 = (tmp_46_cast_fu_816_p1 + tmp_fu_844_p2);

assign tmp20_fu_1012_p2 = (tmp66_cast_fu_992_p1 + tmp68_cast_fu_1008_p1);

assign tmp21_fu_1022_p2 = (tmp60_cast_fu_976_p1 + tmp65_cast_fu_1018_p1);

assign tmp22_fu_1032_p2 = (tmp48_cast_fu_934_p1 + tmp59_cast_fu_1028_p1);

assign tmp23_fu_1038_p2 = (tmp_cast_fu_264_p1 + tmp_2_cast_fu_288_p1);

assign tmp24_fu_1044_p2 = (tmp_cast_7_fu_276_p1 + tmp23_fu_1038_p2);

assign tmp25_fu_1054_p2 = (tmp_1_cast_fu_312_p1 + tmp_5_cast_fu_324_p1);

assign tmp26_fu_1060_p2 = (tmp_3_cast_fu_300_p1 + tmp25_fu_1054_p2);

assign tmp27_fu_1070_p2 = (tmp73_cast_fu_1050_p1 + tmp75_cast_fu_1066_p1);

assign tmp28_fu_1080_p2 = (tmp_14_cast_fu_348_p1 + tmp_8_cast_fu_360_p1);

assign tmp29_fu_1086_p2 = (tmp_6_cast_fu_336_p1 + tmp28_fu_1080_p2);

assign tmp2_fu_860_p2 = (tmp_43_cast_fu_780_p1 + tmp_44_cast_fu_792_p1);

assign tmp30_fu_1096_p2 = (tmp_10_cast_fu_384_p1 + tmp_11_cast_fu_396_p1);

assign tmp31_fu_1102_p2 = (tmp_9_cast_fu_372_p1 + tmp30_fu_1096_p2);

assign tmp32_fu_1112_p2 = (tmp78_cast_fu_1092_p1 + tmp80_cast_fu_1108_p1);

assign tmp33_fu_1122_p2 = (tmp72_cast_fu_1076_p1 + tmp77_cast_fu_1118_p1);

assign tmp34_fu_1132_p2 = (tmp_13_cast_fu_420_p1 + tmp_45_cast_fu_432_p1);

assign tmp35_fu_1138_p2 = (tmp_12_cast_fu_408_p1 + tmp34_fu_1132_p2);

assign tmp36_fu_1148_p2 = (tmp_16_cast_fu_456_p1 + tmp_17_cast_fu_468_p1);

assign tmp37_fu_1154_p2 = (tmp_15_cast_fu_444_p1 + tmp36_fu_1148_p2);

assign tmp38_fu_1164_p2 = (tmp84_cast_fu_1144_p1 + tmp86_cast_fu_1160_p1);

assign tmp39_fu_1174_p2 = (tmp_19_cast_fu_492_p1 + tmp_20_cast_fu_504_p1);

assign tmp3_fu_866_p2 = (tmp_42_cast_fu_768_p1 + tmp2_fu_860_p2);

assign tmp40_fu_1180_p2 = (tmp_18_cast_fu_480_p1 + tmp39_fu_1174_p2);

assign tmp41_fu_1190_p2 = (tmp_23_cast_fu_540_p1 + tmp_21_cast_fu_516_p1);

assign tmp42_fu_1200_p2 = (tmp_48_cast_fu_840_p1 + tmp_22_cast_fu_528_p1);

assign tmp43_fu_1210_p2 = (tmp92_cast_fu_1196_p1 + tmp93_cast_fu_1206_p1);

assign tmp44_fu_1216_p2 = (tmp89_cast_fu_1186_p1 + tmp43_fu_1210_p2);

assign tmp45_fu_1226_p2 = (tmp83_cast_fu_1170_p1 + tmp88_cast_fu_1222_p1);

assign tmp46_fu_1236_p2 = (tmp71_cast_fu_1128_p1 + tmp82_cast_fu_1232_p1);

assign tmp47_cast_fu_1257_p1 = tmp22_reg_1372;

assign tmp48_cast_fu_934_p1 = tmp10_fu_928_p2;

assign tmp49_cast_fu_882_p1 = tmp4_fu_876_p2;

assign tmp4_fu_876_p2 = (tmp50_cast_fu_856_p1 + tmp52_cast_fu_872_p1);

assign tmp50_cast_fu_856_p1 = tmp1_fu_850_p2;

assign tmp52_cast_fu_872_p1 = tmp3_fu_866_p2;

assign tmp54_cast_fu_924_p1 = tmp9_fu_918_p2;

assign tmp55_cast_fu_898_p1 = tmp6_fu_892_p2;

assign tmp57_cast_fu_914_p1 = tmp8_fu_908_p2;

assign tmp59_cast_fu_1028_p1 = tmp21_fu_1022_p2;

assign tmp5_fu_886_p2 = (tmp_37_cast_fu_708_p1 + tmp_38_cast_fu_720_p1);

assign tmp60_cast_fu_976_p1 = tmp15_fu_970_p2;

assign tmp61_cast_fu_950_p1 = tmp12_fu_944_p2;

assign tmp63_cast_fu_966_p1 = tmp14_fu_960_p2;

assign tmp65_cast_fu_1018_p1 = tmp20_fu_1012_p2;

assign tmp66_cast_fu_992_p1 = tmp17_fu_986_p2;

assign tmp68_cast_fu_1008_p1 = tmp19_fu_1002_p2;

assign tmp6_fu_892_p2 = (tmp_36_cast_fu_696_p1 + tmp5_fu_886_p2);

assign tmp70_cast_fu_1260_p1 = tmp46_reg_1377;

assign tmp71_cast_fu_1128_p1 = tmp33_fu_1122_p2;

assign tmp72_cast_fu_1076_p1 = tmp27_fu_1070_p2;

assign tmp73_cast_fu_1050_p1 = tmp24_fu_1044_p2;

assign tmp75_cast_fu_1066_p1 = tmp26_fu_1060_p2;

assign tmp77_cast_fu_1118_p1 = tmp32_fu_1112_p2;

assign tmp78_cast_fu_1092_p1 = tmp29_fu_1086_p2;

assign tmp7_fu_902_p2 = (tmp_40_cast_fu_744_p1 + tmp_41_cast_fu_756_p1);

assign tmp80_cast_fu_1108_p1 = tmp31_fu_1102_p2;

assign tmp82_cast_fu_1232_p1 = tmp45_fu_1226_p2;

assign tmp83_cast_fu_1170_p1 = tmp38_fu_1164_p2;

assign tmp84_cast_fu_1144_p1 = tmp35_fu_1138_p2;

assign tmp86_cast_fu_1160_p1 = tmp37_fu_1154_p2;

assign tmp88_cast_fu_1222_p1 = tmp44_fu_1216_p2;

assign tmp89_cast_fu_1186_p1 = tmp40_fu_1180_p2;

assign tmp8_fu_908_p2 = (tmp_39_cast_fu_732_p1 + tmp7_fu_902_p2);

assign tmp92_cast_fu_1196_p1 = tmp41_fu_1190_p2;

assign tmp93_cast_fu_1206_p1 = tmp42_fu_1200_p2;

assign tmp9_fu_918_p2 = (tmp55_cast_fu_898_p1 + tmp57_cast_fu_914_p1);

assign tmp_10_cast_fu_384_p1 = tmp_13_fu_376_p3;

assign tmp_10_fu_340_p3 = r_V_fu_254_p2[32'd7];

assign tmp_11_cast_fu_396_p1 = tmp_14_fu_388_p3;

assign tmp_11_fu_352_p3 = r_V_fu_254_p2[32'd8];

assign tmp_12_cast_fu_408_p1 = tmp_15_fu_400_p3;

assign tmp_12_fu_364_p3 = r_V_fu_254_p2[32'd9];

assign tmp_13_cast_fu_420_p1 = tmp_16_fu_412_p3;

assign tmp_13_fu_376_p3 = r_V_fu_254_p2[32'd10];

assign tmp_14_cast_fu_348_p1 = tmp_10_fu_340_p3;

assign tmp_14_fu_388_p3 = r_V_fu_254_p2[32'd11];

assign tmp_15_cast_fu_444_p1 = tmp_18_fu_436_p3;

assign tmp_15_fu_400_p3 = r_V_fu_254_p2[32'd12];

assign tmp_16_cast_fu_456_p1 = tmp_19_fu_448_p3;

assign tmp_16_fu_412_p3 = r_V_fu_254_p2[32'd13];

assign tmp_17_cast_fu_468_p1 = tmp_20_fu_460_p3;

assign tmp_17_fu_424_p3 = r_V_fu_254_p2[32'd14];

assign tmp_18_cast_fu_480_p1 = tmp_21_fu_472_p3;

assign tmp_18_fu_436_p3 = r_V_fu_254_p2[32'd15];

assign tmp_19_cast_fu_492_p1 = tmp_22_fu_484_p3;

assign tmp_19_fu_448_p3 = r_V_fu_254_p2[32'd16];

assign tmp_1_cast_fu_312_p1 = tmp_7_fu_304_p3;

assign tmp_1_fu_1284_p2 = (tmp_6_2_reg_1382 | tmp_6_1_reg_1347);

assign tmp_20_cast_fu_504_p1 = tmp_23_fu_496_p3;

assign tmp_20_fu_460_p3 = r_V_fu_254_p2[32'd17];

assign tmp_21_cast_fu_516_p1 = tmp_24_fu_508_p3;

assign tmp_21_fu_472_p3 = r_V_fu_254_p2[32'd18];

assign tmp_22_cast_fu_528_p1 = tmp_25_fu_520_p3;

assign tmp_22_fu_484_p3 = r_V_fu_254_p2[32'd19];

assign tmp_23_cast_fu_540_p1 = tmp_26_fu_532_p3;

assign tmp_23_fu_496_p3 = r_V_fu_254_p2[32'd20];

assign tmp_24_cast_fu_552_p1 = tmp_27_fu_544_p3;

assign tmp_24_fu_508_p3 = r_V_fu_254_p2[32'd21];

assign tmp_25_cast_fu_564_p1 = tmp_28_fu_556_p3;

assign tmp_25_fu_520_p3 = r_V_fu_254_p2[32'd22];

assign tmp_26_cast_fu_576_p1 = tmp_29_fu_568_p3;

assign tmp_26_fu_532_p3 = r_V_fu_254_p2[32'd23];

assign tmp_27_cast_fu_588_p1 = tmp_30_fu_580_p3;

assign tmp_27_fu_544_p3 = r_V_fu_254_p2[32'd24];

assign tmp_28_cast_fu_600_p1 = tmp_31_fu_592_p3;

assign tmp_28_fu_556_p3 = r_V_fu_254_p2[32'd25];

assign tmp_29_cast_fu_612_p1 = tmp_32_fu_604_p3;

assign tmp_29_fu_568_p3 = r_V_fu_254_p2[32'd26];

assign tmp_2_cast_fu_288_p1 = tmp_5_fu_280_p3;

assign tmp_2_fu_260_p1 = r_V_fu_254_p2[0:0];

assign tmp_30_cast_fu_624_p1 = tmp_33_fu_616_p3;

assign tmp_30_fu_580_p3 = r_V_fu_254_p2[32'd27];

assign tmp_31_cast_fu_636_p1 = tmp_34_fu_628_p3;

assign tmp_31_fu_592_p3 = r_V_fu_254_p2[32'd28];

assign tmp_32_cast_fu_648_p1 = tmp_35_fu_640_p3;

assign tmp_32_fu_604_p3 = r_V_fu_254_p2[32'd29];

assign tmp_33_cast_fu_660_p1 = tmp_36_fu_652_p3;

assign tmp_33_fu_616_p3 = r_V_fu_254_p2[32'd30];

assign tmp_34_cast_fu_672_p1 = tmp_37_fu_664_p3;

assign tmp_34_fu_628_p3 = r_V_fu_254_p2[32'd31];

assign tmp_35_cast_fu_684_p1 = tmp_38_fu_676_p3;

assign tmp_35_fu_640_p3 = r_V_fu_254_p2[32'd32];

assign tmp_36_cast_fu_696_p1 = tmp_39_fu_688_p3;

assign tmp_36_fu_652_p3 = r_V_fu_254_p2[32'd33];

assign tmp_37_cast_fu_708_p1 = tmp_40_fu_700_p3;

assign tmp_37_fu_664_p3 = r_V_fu_254_p2[32'd34];

assign tmp_38_cast_fu_720_p1 = tmp_41_fu_712_p3;

assign tmp_38_fu_676_p3 = r_V_fu_254_p2[32'd35];

assign tmp_39_cast_fu_732_p1 = tmp_42_fu_724_p3;

assign tmp_39_fu_688_p3 = r_V_fu_254_p2[32'd36];

assign tmp_3_cast_fu_300_p1 = tmp_6_fu_292_p3;

assign tmp_3_fu_268_p3 = r_V_fu_254_p2[32'd1];

assign tmp_40_cast_fu_744_p1 = tmp_43_fu_736_p3;

assign tmp_40_fu_700_p3 = r_V_fu_254_p2[32'd37];

assign tmp_41_cast_fu_756_p1 = tmp_44_fu_748_p3;

assign tmp_41_fu_712_p3 = r_V_fu_254_p2[32'd38];

assign tmp_42_cast_fu_768_p1 = tmp_45_fu_760_p3;

assign tmp_42_fu_724_p3 = r_V_fu_254_p2[32'd39];

assign tmp_43_cast_fu_780_p1 = tmp_46_fu_772_p3;

assign tmp_43_fu_736_p3 = r_V_fu_254_p2[32'd40];

assign tmp_44_cast_fu_792_p1 = tmp_47_fu_784_p3;

assign tmp_44_fu_748_p3 = r_V_fu_254_p2[32'd41];

assign tmp_45_cast_fu_432_p1 = tmp_17_fu_424_p3;

assign tmp_45_fu_760_p3 = r_V_fu_254_p2[32'd42];

assign tmp_46_cast_fu_816_p1 = tmp_49_fu_808_p3;

assign tmp_46_fu_772_p3 = r_V_fu_254_p2[32'd43];

assign tmp_47_cast_fu_828_p1 = tmp_50_fu_820_p3;

assign tmp_47_fu_784_p3 = r_V_fu_254_p2[32'd44];

assign tmp_48_cast_fu_840_p1 = tmp_51_fu_832_p3;

assign tmp_48_fu_796_p3 = r_V_fu_254_p2[32'd45];

assign tmp_49_cast_fu_804_p1 = tmp_48_fu_796_p3;

assign tmp_49_fu_808_p3 = r_V_fu_254_p2[32'd46];

assign tmp_4_fu_1296_p2 = ((dist_V_s_fu_1263_p2 < min_distances_V_q0) ? 1'b1 : 1'b0);

assign tmp_50_fu_820_p3 = r_V_fu_254_p2[32'd47];

assign tmp_51_fu_832_p3 = r_V_fu_254_p2[32'd48];

assign tmp_52_fu_204_p1 = min_distances_V_offset[5:0];

assign tmp_53_fu_219_p1 = min_distances_V_offset[31:0];

assign tmp_5_cast_fu_324_p1 = tmp_8_fu_316_p3;

assign tmp_5_fu_280_p3 = r_V_fu_254_p2[32'd2];

assign tmp_6_cast_fu_336_p1 = tmp_9_fu_328_p3;

assign tmp_6_fu_292_p3 = r_V_fu_254_p2[32'd3];

assign tmp_7_cast_fu_1302_p1 = p_max_dist_id_1_1_fu_1288_p3;

assign tmp_7_fu_304_p3 = r_V_fu_254_p2[32'd4];

assign tmp_8_cast_fu_360_p1 = tmp_11_fu_352_p3;

assign tmp_8_fu_316_p3 = r_V_fu_254_p2[32'd5];

assign tmp_9_cast_fu_372_p1 = tmp_12_fu_364_p3;

assign tmp_9_fu_328_p3 = r_V_fu_254_p2[32'd6];

assign tmp_cast_7_fu_276_p1 = tmp_3_fu_268_p3;

assign tmp_cast_fu_264_p1 = tmp_2_fu_260_p1;

assign tmp_fu_844_p2 = (tmp_49_cast_fu_804_p1 + tmp_47_cast_fu_828_p1);

assign tmp_s_fu_223_p2 = ((min_distances_V_q0 == 6'd0) ? 1'b1 : 1'b0);

endmodule //update_knn
