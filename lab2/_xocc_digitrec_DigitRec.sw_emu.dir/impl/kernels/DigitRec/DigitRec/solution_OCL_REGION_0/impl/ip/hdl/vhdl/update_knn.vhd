-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity update_knn is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    test_inst_V : IN STD_LOGIC_VECTOR (63 downto 0);
    train_inst_V : IN STD_LOGIC_VECTOR (63 downto 0);
    min_distances_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    min_distances_V_ce0 : OUT STD_LOGIC;
    min_distances_V_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
    min_distances_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    min_distances_V_ce1 : OUT STD_LOGIC;
    min_distances_V_we1 : OUT STD_LOGIC;
    min_distances_V_d1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    min_distances_V_q1 : IN STD_LOGIC_VECTOR (5 downto 0);
    min_distances_V_offset : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of update_knn is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_52_fu_204_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_52_reg_1321 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_1_fu_208_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_1_reg_1327 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_53_fu_219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_reg_1337 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1342 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_1_reg_1347 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_018_1_1_fu_232_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_018_1_1_reg_1352 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_fu_244_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_2_reg_1362 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp22_fu_1032_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp22_reg_1372 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp46_fu_1236_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp46_reg_1377 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_2_reg_1382 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_port_reg_test_inst_V : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_port_reg_train_inst_V : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_1_cast_fu_214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_018_1_1_cast_fu_239_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_2_cast_fu_249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal min_distances_V_load_2_018_1_1_cast_fu_1252_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum2_cast_fu_1311_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_4_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dist_V_s_fu_1263_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_1_cast_cast_fu_229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_254_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_260_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_268_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_280_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_292_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_304_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_316_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_328_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_340_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_352_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_364_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_376_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_388_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_400_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_424_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_436_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_448_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_460_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_472_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_484_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_496_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_508_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_520_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_532_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_544_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_568_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_580_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_592_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_604_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_616_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_628_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_640_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_652_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_664_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_676_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_688_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_700_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_712_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_724_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_736_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_748_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_760_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_772_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_784_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_796_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_808_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_820_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_832_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_cast_fu_804_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_47_cast_fu_828_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_46_cast_fu_816_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_844_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp1_fu_850_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_43_cast_fu_780_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_cast_fu_792_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_cast_fu_768_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp2_fu_860_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp3_fu_866_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp50_cast_fu_856_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp52_cast_fu_872_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp4_fu_876_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_37_cast_fu_708_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_38_cast_fu_720_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_36_cast_fu_696_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp5_fu_886_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp6_fu_892_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_40_cast_fu_744_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_41_cast_fu_756_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_39_cast_fu_732_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp7_fu_902_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp8_fu_908_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp55_cast_fu_898_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp57_cast_fu_914_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp9_fu_918_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp49_cast_fu_882_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp54_cast_fu_924_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp10_fu_928_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_25_cast_fu_564_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_cast_fu_576_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_cast_fu_552_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp11_fu_938_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp12_fu_944_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_cast_fu_600_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_cast_fu_612_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_cast_fu_588_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp13_fu_954_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp14_fu_960_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp61_cast_fu_950_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp63_cast_fu_966_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp15_fu_970_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_31_cast_fu_636_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_32_cast_fu_648_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_cast_fu_624_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp16_fu_980_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp17_fu_986_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_34_cast_fu_672_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_35_cast_fu_684_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_33_cast_fu_660_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp18_fu_996_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp19_fu_1002_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp66_cast_fu_992_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp68_cast_fu_1008_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp20_fu_1012_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp60_cast_fu_976_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp65_cast_fu_1018_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp21_fu_1022_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp48_cast_fu_934_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp59_cast_fu_1028_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_cast_fu_264_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_cast_fu_288_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_cast_7_fu_276_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp23_fu_1038_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp24_fu_1044_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_cast_fu_312_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_cast_fu_324_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_cast_fu_300_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp25_fu_1054_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp26_fu_1060_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp73_cast_fu_1050_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp75_cast_fu_1066_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp27_fu_1070_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_cast_fu_348_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_cast_fu_360_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_cast_fu_336_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp28_fu_1080_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp29_fu_1086_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_cast_fu_384_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_fu_396_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast_fu_372_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp30_fu_1096_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp31_fu_1102_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp78_cast_fu_1092_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp80_cast_fu_1108_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp32_fu_1112_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp72_cast_fu_1076_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp77_cast_fu_1118_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp33_fu_1122_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_cast_fu_420_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_cast_fu_432_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_cast_fu_408_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp34_fu_1132_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp35_fu_1138_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_cast_fu_456_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_cast_fu_468_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_cast_fu_444_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp36_fu_1148_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp37_fu_1154_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp84_cast_fu_1144_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp86_cast_fu_1160_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp38_fu_1164_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_cast_fu_492_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_cast_fu_504_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_cast_fu_480_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp39_fu_1174_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp40_fu_1180_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_cast_fu_540_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_cast_fu_516_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp41_fu_1190_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_48_cast_fu_840_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_cast_fu_528_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp42_fu_1200_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp92_cast_fu_1196_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp93_cast_fu_1206_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp89_cast_fu_1186_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp43_fu_1210_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp44_fu_1216_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp83_cast_fu_1170_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp88_cast_fu_1222_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp45_fu_1226_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp71_cast_fu_1128_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp82_cast_fu_1232_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_2_cast_cast_fu_1242_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal min_distances_V_load_2_018_1_1_fu_1245_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp47_cast_fu_1257_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp70_cast_fu_1260_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_dist_id_1_1_cast_cast_fu_1277_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_s_fu_1270_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_max_dist_id_1_1_fu_1288_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_cast_fu_1302_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum2_fu_1306_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_ce = ap_const_logic_1))) then
                ap_port_reg_test_inst_V <= test_inst_V;
                ap_port_reg_train_inst_V <= train_inst_V;
                sum_1_reg_1327 <= sum_1_fu_208_p2;
                tmp_52_reg_1321 <= tmp_52_fu_204_p1;
                tmp_53_reg_1337 <= tmp_53_fu_219_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                p_018_1_1_reg_1352 <= p_018_1_1_fu_232_p3;
                sum_2_reg_1362 <= sum_2_fu_244_p2;
                tmp_6_1_reg_1347 <= grp_fu_198_p2;
                tmp_s_reg_1342 <= tmp_s_fu_223_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp22_reg_1372 <= tmp22_fu_1032_p2;
                tmp46_reg_1377 <= tmp46_fu_1236_p2;
                tmp_6_2_reg_1382 <= grp_fu_198_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_ce = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state4)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_ce, ap_CS_fsm_state4)
    begin
        if (((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    dist_V_s_fu_1263_p2 <= std_logic_vector(unsigned(tmp47_cast_fu_1257_p1) + unsigned(tmp70_cast_fu_1260_p1));
    grp_fu_198_p2 <= "1" when (unsigned(min_distances_V_q1) > unsigned(min_distances_V_q0)) else "0";
    max_dist_id_1_1_cast_cast_fu_1277_p3 <= 
        ap_const_lv3_2 when (tmp_6_2_reg_1382(0) = '1') else 
        ap_const_lv3_1;

    min_distances_V_address0_assign_proc : process(ap_CS_fsm_state1, min_distances_V_offset, ap_CS_fsm_state2, ap_CS_fsm_state3, p_018_1_1_cast_fu_239_p1, min_distances_V_load_2_018_1_1_cast_fu_1252_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            min_distances_V_address0 <= min_distances_V_load_2_018_1_1_cast_fu_1252_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            min_distances_V_address0 <= p_018_1_1_cast_fu_239_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            min_distances_V_address0 <= min_distances_V_offset(5 - 1 downto 0);
        else 
            min_distances_V_address0 <= "XXXXX";
        end if; 
    end process;


    min_distances_V_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, sum_1_cast_fu_214_p1, sum_2_cast_fu_249_p1, sum2_cast_fu_1311_p1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            min_distances_V_address1 <= sum2_cast_fu_1311_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            min_distances_V_address1 <= sum_2_cast_fu_249_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            min_distances_V_address1 <= sum_1_cast_fu_214_p1(5 - 1 downto 0);
        else 
            min_distances_V_address1 <= "XXXXX";
        end if; 
    end process;


    min_distances_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_ce = ap_const_logic_1)) or ((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            min_distances_V_ce0 <= ap_const_logic_1;
        else 
            min_distances_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    min_distances_V_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_ce = ap_const_logic_1)) or ((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            min_distances_V_ce1 <= ap_const_logic_1;
        else 
            min_distances_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    min_distances_V_d1 <= dist_V_s_fu_1263_p2;
    min_distances_V_load_2_018_1_1_cast_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(min_distances_V_load_2_018_1_1_fu_1245_p3),64));
    min_distances_V_load_2_018_1_1_fu_1245_p3 <= 
        sum_2_cast_cast_fu_1242_p1 when (grp_fu_198_p2(0) = '1') else 
        p_018_1_1_reg_1352;

    min_distances_V_we1_assign_proc : process(ap_ce, ap_CS_fsm_state4, tmp_4_fu_1296_p2)
    begin
        if (((ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_4_fu_1296_p2 = ap_const_lv1_1))) then 
            min_distances_V_we1 <= ap_const_logic_1;
        else 
            min_distances_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_018_1_1_cast_fu_239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_018_1_1_fu_232_p3),64));
    p_018_1_1_fu_232_p3 <= 
        sum_1_cast_cast_fu_229_p1 when (grp_fu_198_p2(0) = '1') else 
        tmp_53_reg_1337;
    p_max_dist_id_1_1_fu_1288_p3 <= 
        max_dist_id_1_1_cast_cast_fu_1277_p3 when (tmp_1_fu_1284_p2(0) = '1') else 
        p_s_fu_1270_p3;
    p_s_fu_1270_p3 <= 
        ap_const_lv3_4 when (tmp_s_reg_1342(0) = '1') else 
        ap_const_lv3_0;
    r_V_fu_254_p2 <= (ap_port_reg_train_inst_V xor ap_port_reg_test_inst_V);
    sum2_cast_fu_1311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum2_fu_1306_p2),64));
    sum2_fu_1306_p2 <= std_logic_vector(unsigned(tmp_7_cast_fu_1302_p1) + unsigned(tmp_52_reg_1321));
    sum_1_cast_cast_fu_229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_1_reg_1327),32));
    sum_1_cast_fu_214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_1_fu_208_p2),64));
    sum_1_fu_208_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(tmp_52_fu_204_p1));
    sum_2_cast_cast_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_2_reg_1362),32));
    sum_2_cast_fu_249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_2_fu_244_p2),64));
    sum_2_fu_244_p2 <= std_logic_vector(unsigned(ap_const_lv6_2) + unsigned(tmp_52_reg_1321));
    tmp10_fu_928_p2 <= std_logic_vector(unsigned(tmp49_cast_fu_882_p1) + unsigned(tmp54_cast_fu_924_p1));
    tmp11_fu_938_p2 <= std_logic_vector(unsigned(tmp_25_cast_fu_564_p1) + unsigned(tmp_26_cast_fu_576_p1));
    tmp12_fu_944_p2 <= std_logic_vector(unsigned(tmp_24_cast_fu_552_p1) + unsigned(tmp11_fu_938_p2));
    tmp13_fu_954_p2 <= std_logic_vector(unsigned(tmp_28_cast_fu_600_p1) + unsigned(tmp_29_cast_fu_612_p1));
    tmp14_fu_960_p2 <= std_logic_vector(unsigned(tmp_27_cast_fu_588_p1) + unsigned(tmp13_fu_954_p2));
    tmp15_fu_970_p2 <= std_logic_vector(unsigned(tmp61_cast_fu_950_p1) + unsigned(tmp63_cast_fu_966_p1));
    tmp16_fu_980_p2 <= std_logic_vector(unsigned(tmp_31_cast_fu_636_p1) + unsigned(tmp_32_cast_fu_648_p1));
    tmp17_fu_986_p2 <= std_logic_vector(unsigned(tmp_30_cast_fu_624_p1) + unsigned(tmp16_fu_980_p2));
    tmp18_fu_996_p2 <= std_logic_vector(unsigned(tmp_34_cast_fu_672_p1) + unsigned(tmp_35_cast_fu_684_p1));
    tmp19_fu_1002_p2 <= std_logic_vector(unsigned(tmp_33_cast_fu_660_p1) + unsigned(tmp18_fu_996_p2));
    tmp1_fu_850_p2 <= std_logic_vector(unsigned(tmp_46_cast_fu_816_p1) + unsigned(tmp_fu_844_p2));
    tmp20_fu_1012_p2 <= std_logic_vector(unsigned(tmp66_cast_fu_992_p1) + unsigned(tmp68_cast_fu_1008_p1));
    tmp21_fu_1022_p2 <= std_logic_vector(unsigned(tmp60_cast_fu_976_p1) + unsigned(tmp65_cast_fu_1018_p1));
    tmp22_fu_1032_p2 <= std_logic_vector(unsigned(tmp48_cast_fu_934_p1) + unsigned(tmp59_cast_fu_1028_p1));
    tmp23_fu_1038_p2 <= std_logic_vector(unsigned(tmp_cast_fu_264_p1) + unsigned(tmp_2_cast_fu_288_p1));
    tmp24_fu_1044_p2 <= std_logic_vector(unsigned(tmp_cast_7_fu_276_p1) + unsigned(tmp23_fu_1038_p2));
    tmp25_fu_1054_p2 <= std_logic_vector(unsigned(tmp_1_cast_fu_312_p1) + unsigned(tmp_5_cast_fu_324_p1));
    tmp26_fu_1060_p2 <= std_logic_vector(unsigned(tmp_3_cast_fu_300_p1) + unsigned(tmp25_fu_1054_p2));
    tmp27_fu_1070_p2 <= std_logic_vector(unsigned(tmp73_cast_fu_1050_p1) + unsigned(tmp75_cast_fu_1066_p1));
    tmp28_fu_1080_p2 <= std_logic_vector(unsigned(tmp_14_cast_fu_348_p1) + unsigned(tmp_8_cast_fu_360_p1));
    tmp29_fu_1086_p2 <= std_logic_vector(unsigned(tmp_6_cast_fu_336_p1) + unsigned(tmp28_fu_1080_p2));
    tmp2_fu_860_p2 <= std_logic_vector(unsigned(tmp_43_cast_fu_780_p1) + unsigned(tmp_44_cast_fu_792_p1));
    tmp30_fu_1096_p2 <= std_logic_vector(unsigned(tmp_10_cast_fu_384_p1) + unsigned(tmp_11_cast_fu_396_p1));
    tmp31_fu_1102_p2 <= std_logic_vector(unsigned(tmp_9_cast_fu_372_p1) + unsigned(tmp30_fu_1096_p2));
    tmp32_fu_1112_p2 <= std_logic_vector(unsigned(tmp78_cast_fu_1092_p1) + unsigned(tmp80_cast_fu_1108_p1));
    tmp33_fu_1122_p2 <= std_logic_vector(unsigned(tmp72_cast_fu_1076_p1) + unsigned(tmp77_cast_fu_1118_p1));
    tmp34_fu_1132_p2 <= std_logic_vector(unsigned(tmp_13_cast_fu_420_p1) + unsigned(tmp_45_cast_fu_432_p1));
    tmp35_fu_1138_p2 <= std_logic_vector(unsigned(tmp_12_cast_fu_408_p1) + unsigned(tmp34_fu_1132_p2));
    tmp36_fu_1148_p2 <= std_logic_vector(unsigned(tmp_16_cast_fu_456_p1) + unsigned(tmp_17_cast_fu_468_p1));
    tmp37_fu_1154_p2 <= std_logic_vector(unsigned(tmp_15_cast_fu_444_p1) + unsigned(tmp36_fu_1148_p2));
    tmp38_fu_1164_p2 <= std_logic_vector(unsigned(tmp84_cast_fu_1144_p1) + unsigned(tmp86_cast_fu_1160_p1));
    tmp39_fu_1174_p2 <= std_logic_vector(unsigned(tmp_19_cast_fu_492_p1) + unsigned(tmp_20_cast_fu_504_p1));
    tmp3_fu_866_p2 <= std_logic_vector(unsigned(tmp_42_cast_fu_768_p1) + unsigned(tmp2_fu_860_p2));
    tmp40_fu_1180_p2 <= std_logic_vector(unsigned(tmp_18_cast_fu_480_p1) + unsigned(tmp39_fu_1174_p2));
    tmp41_fu_1190_p2 <= std_logic_vector(unsigned(tmp_23_cast_fu_540_p1) + unsigned(tmp_21_cast_fu_516_p1));
    tmp42_fu_1200_p2 <= std_logic_vector(unsigned(tmp_48_cast_fu_840_p1) + unsigned(tmp_22_cast_fu_528_p1));
    tmp43_fu_1210_p2 <= std_logic_vector(unsigned(tmp92_cast_fu_1196_p1) + unsigned(tmp93_cast_fu_1206_p1));
    tmp44_fu_1216_p2 <= std_logic_vector(unsigned(tmp89_cast_fu_1186_p1) + unsigned(tmp43_fu_1210_p2));
    tmp45_fu_1226_p2 <= std_logic_vector(unsigned(tmp83_cast_fu_1170_p1) + unsigned(tmp88_cast_fu_1222_p1));
    tmp46_fu_1236_p2 <= std_logic_vector(unsigned(tmp71_cast_fu_1128_p1) + unsigned(tmp82_cast_fu_1232_p1));
    tmp47_cast_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp22_reg_1372),6));
    tmp48_cast_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp10_fu_928_p2),5));
    tmp49_cast_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp4_fu_876_p2),4));
    tmp4_fu_876_p2 <= std_logic_vector(unsigned(tmp50_cast_fu_856_p1) + unsigned(tmp52_cast_fu_872_p1));
    tmp50_cast_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_850_p2),3));
    tmp52_cast_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_866_p2),3));
    tmp54_cast_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp9_fu_918_p2),4));
    tmp55_cast_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp6_fu_892_p2),3));
    tmp57_cast_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp8_fu_908_p2),3));
    tmp59_cast_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp21_fu_1022_p2),5));
    tmp5_fu_886_p2 <= std_logic_vector(unsigned(tmp_37_cast_fu_708_p1) + unsigned(tmp_38_cast_fu_720_p1));
    tmp60_cast_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp15_fu_970_p2),4));
    tmp61_cast_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp12_fu_944_p2),3));
    tmp63_cast_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp14_fu_960_p2),3));
    tmp65_cast_fu_1018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp20_fu_1012_p2),4));
    tmp66_cast_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp17_fu_986_p2),3));
    tmp68_cast_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp19_fu_1002_p2),3));
    tmp6_fu_892_p2 <= std_logic_vector(unsigned(tmp_36_cast_fu_696_p1) + unsigned(tmp5_fu_886_p2));
    tmp70_cast_fu_1260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp46_reg_1377),6));
    tmp71_cast_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp33_fu_1122_p2),5));
    tmp72_cast_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp27_fu_1070_p2),4));
    tmp73_cast_fu_1050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp24_fu_1044_p2),3));
    tmp75_cast_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp26_fu_1060_p2),3));
    tmp77_cast_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp32_fu_1112_p2),4));
    tmp78_cast_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp29_fu_1086_p2),3));
    tmp7_fu_902_p2 <= std_logic_vector(unsigned(tmp_40_cast_fu_744_p1) + unsigned(tmp_41_cast_fu_756_p1));
    tmp80_cast_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp31_fu_1102_p2),3));
    tmp82_cast_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp45_fu_1226_p2),5));
    tmp83_cast_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp38_fu_1164_p2),4));
    tmp84_cast_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp35_fu_1138_p2),3));
    tmp86_cast_fu_1160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp37_fu_1154_p2),3));
    tmp88_cast_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp44_fu_1216_p2),4));
    tmp89_cast_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp40_fu_1180_p2),3));
    tmp8_fu_908_p2 <= std_logic_vector(unsigned(tmp_39_cast_fu_732_p1) + unsigned(tmp7_fu_902_p2));
    tmp92_cast_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp41_fu_1190_p2),3));
    tmp93_cast_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp42_fu_1200_p2),3));
    tmp9_fu_918_p2 <= std_logic_vector(unsigned(tmp55_cast_fu_898_p1) + unsigned(tmp57_cast_fu_914_p1));
    tmp_10_cast_fu_384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_376_p3),2));
    tmp_10_fu_340_p3 <= r_V_fu_254_p2(7 downto 7);
    tmp_11_cast_fu_396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_388_p3),2));
    tmp_11_fu_352_p3 <= r_V_fu_254_p2(8 downto 8);
    tmp_12_cast_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_400_p3),2));
    tmp_12_fu_364_p3 <= r_V_fu_254_p2(9 downto 9);
    tmp_13_cast_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_412_p3),2));
    tmp_13_fu_376_p3 <= r_V_fu_254_p2(10 downto 10);
    tmp_14_cast_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_340_p3),2));
    tmp_14_fu_388_p3 <= r_V_fu_254_p2(11 downto 11);
    tmp_15_cast_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_436_p3),2));
    tmp_15_fu_400_p3 <= r_V_fu_254_p2(12 downto 12);
    tmp_16_cast_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_448_p3),2));
    tmp_16_fu_412_p3 <= r_V_fu_254_p2(13 downto 13);
    tmp_17_cast_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_460_p3),2));
    tmp_17_fu_424_p3 <= r_V_fu_254_p2(14 downto 14);
    tmp_18_cast_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_472_p3),2));
    tmp_18_fu_436_p3 <= r_V_fu_254_p2(15 downto 15);
    tmp_19_cast_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_484_p3),2));
    tmp_19_fu_448_p3 <= r_V_fu_254_p2(16 downto 16);
    tmp_1_cast_fu_312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_304_p3),2));
    tmp_1_fu_1284_p2 <= (tmp_6_2_reg_1382 or tmp_6_1_reg_1347);
    tmp_20_cast_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_496_p3),2));
    tmp_20_fu_460_p3 <= r_V_fu_254_p2(17 downto 17);
    tmp_21_cast_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_508_p3),2));
    tmp_21_fu_472_p3 <= r_V_fu_254_p2(18 downto 18);
    tmp_22_cast_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_520_p3),2));
    tmp_22_fu_484_p3 <= r_V_fu_254_p2(19 downto 19);
    tmp_23_cast_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_532_p3),2));
    tmp_23_fu_496_p3 <= r_V_fu_254_p2(20 downto 20);
    tmp_24_cast_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_544_p3),2));
    tmp_24_fu_508_p3 <= r_V_fu_254_p2(21 downto 21);
    tmp_25_cast_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_556_p3),2));
    tmp_25_fu_520_p3 <= r_V_fu_254_p2(22 downto 22);
    tmp_26_cast_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_568_p3),2));
    tmp_26_fu_532_p3 <= r_V_fu_254_p2(23 downto 23);
    tmp_27_cast_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_580_p3),2));
    tmp_27_fu_544_p3 <= r_V_fu_254_p2(24 downto 24);
    tmp_28_cast_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_592_p3),2));
    tmp_28_fu_556_p3 <= r_V_fu_254_p2(25 downto 25);
    tmp_29_cast_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_604_p3),2));
    tmp_29_fu_568_p3 <= r_V_fu_254_p2(26 downto 26);
    tmp_2_cast_fu_288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_280_p3),2));
    tmp_2_fu_260_p1 <= r_V_fu_254_p2(1 - 1 downto 0);
    tmp_30_cast_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_616_p3),2));
    tmp_30_fu_580_p3 <= r_V_fu_254_p2(27 downto 27);
    tmp_31_cast_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_628_p3),2));
    tmp_31_fu_592_p3 <= r_V_fu_254_p2(28 downto 28);
    tmp_32_cast_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_640_p3),2));
    tmp_32_fu_604_p3 <= r_V_fu_254_p2(29 downto 29);
    tmp_33_cast_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_652_p3),2));
    tmp_33_fu_616_p3 <= r_V_fu_254_p2(30 downto 30);
    tmp_34_cast_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_664_p3),2));
    tmp_34_fu_628_p3 <= r_V_fu_254_p2(31 downto 31);
    tmp_35_cast_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_676_p3),2));
    tmp_35_fu_640_p3 <= r_V_fu_254_p2(32 downto 32);
    tmp_36_cast_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_688_p3),2));
    tmp_36_fu_652_p3 <= r_V_fu_254_p2(33 downto 33);
    tmp_37_cast_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_700_p3),2));
    tmp_37_fu_664_p3 <= r_V_fu_254_p2(34 downto 34);
    tmp_38_cast_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_712_p3),2));
    tmp_38_fu_676_p3 <= r_V_fu_254_p2(35 downto 35);
    tmp_39_cast_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_724_p3),2));
    tmp_39_fu_688_p3 <= r_V_fu_254_p2(36 downto 36);
    tmp_3_cast_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_292_p3),2));
    tmp_3_fu_268_p3 <= r_V_fu_254_p2(1 downto 1);
    tmp_40_cast_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_736_p3),2));
    tmp_40_fu_700_p3 <= r_V_fu_254_p2(37 downto 37);
    tmp_41_cast_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_748_p3),2));
    tmp_41_fu_712_p3 <= r_V_fu_254_p2(38 downto 38);
    tmp_42_cast_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_760_p3),2));
    tmp_42_fu_724_p3 <= r_V_fu_254_p2(39 downto 39);
    tmp_43_cast_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_772_p3),2));
    tmp_43_fu_736_p3 <= r_V_fu_254_p2(40 downto 40);
    tmp_44_cast_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_784_p3),2));
    tmp_44_fu_748_p3 <= r_V_fu_254_p2(41 downto 41);
    tmp_45_cast_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_424_p3),2));
    tmp_45_fu_760_p3 <= r_V_fu_254_p2(42 downto 42);
    tmp_46_cast_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_808_p3),2));
    tmp_46_fu_772_p3 <= r_V_fu_254_p2(43 downto 43);
    tmp_47_cast_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_820_p3),2));
    tmp_47_fu_784_p3 <= r_V_fu_254_p2(44 downto 44);
    tmp_48_cast_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_832_p3),2));
    tmp_48_fu_796_p3 <= r_V_fu_254_p2(45 downto 45);
    tmp_49_cast_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_796_p3),2));
    tmp_49_fu_808_p3 <= r_V_fu_254_p2(46 downto 46);
    tmp_4_fu_1296_p2 <= "1" when (unsigned(dist_V_s_fu_1263_p2) < unsigned(min_distances_V_q0)) else "0";
    tmp_50_fu_820_p3 <= r_V_fu_254_p2(47 downto 47);
    tmp_51_fu_832_p3 <= r_V_fu_254_p2(48 downto 48);
    tmp_52_fu_204_p1 <= min_distances_V_offset(6 - 1 downto 0);
    tmp_53_fu_219_p1 <= min_distances_V_offset(32 - 1 downto 0);
    tmp_5_cast_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_316_p3),2));
    tmp_5_fu_280_p3 <= r_V_fu_254_p2(2 downto 2);
    tmp_6_cast_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_328_p3),2));
    tmp_6_fu_292_p3 <= r_V_fu_254_p2(3 downto 3);
    tmp_7_cast_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_max_dist_id_1_1_fu_1288_p3),6));
    tmp_7_fu_304_p3 <= r_V_fu_254_p2(4 downto 4);
    tmp_8_cast_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_352_p3),2));
    tmp_8_fu_316_p3 <= r_V_fu_254_p2(5 downto 5);
    tmp_9_cast_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_364_p3),2));
    tmp_9_fu_328_p3 <= r_V_fu_254_p2(6 downto 6);
    tmp_cast_7_fu_276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_268_p3),2));
    tmp_cast_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_260_p1),2));
    tmp_fu_844_p2 <= std_logic_vector(unsigned(tmp_49_cast_fu_804_p1) + unsigned(tmp_47_cast_fu_828_p1));
    tmp_s_fu_223_p2 <= "1" when (min_distances_V_q0 = ap_const_lv6_0) else "0";
end behav;
