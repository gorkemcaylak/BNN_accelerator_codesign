-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity knn_vote is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    knn_set_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    knn_set_V_ce0 : OUT STD_LOGIC;
    knn_set_V_we0 : OUT STD_LOGIC;
    knn_set_V_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    knn_set_V_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
    knn_set_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    knn_set_V_ce1 : OUT STD_LOGIC;
    knn_set_V_q1 : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of knn_vote is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal k_reg_413 : STD_LOGIC_VECTOR (1 downto 0);
    signal agg_result_V_reg_424 : STD_LOGIC_VECTOR (3 downto 0);
    signal max_score_reg_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal min_index_V_reg_448 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond2_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_1_fu_466_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond3_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_1552 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal k_1_fu_483_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_1_reg_1556 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_9_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1561 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_9_0_1_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_0_1_reg_1566 : STD_LOGIC_VECTOR (0 downto 0);
    signal knn_set_V_load_1_080_2_fu_509_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_load_1_080_2_reg_1572 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_0_2_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_0_2_reg_1578 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_9_1_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_1_reg_1583 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_080_2_1_fu_535_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_1_reg_1590 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_1_1_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_1_1_reg_1596 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_9_1_2_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_1_2_reg_1601 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_080_2_1_2_fu_561_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_1_2_reg_1607 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_2_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_2_reg_1613 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp_9_2_1_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_2_1_reg_1618 : STD_LOGIC_VECTOR (0 downto 0);
    signal knn_set_V_load_7_080_2_2_fu_587_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_load_7_080_2_2_reg_1624 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_2_2_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_2_2_reg_1630 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state8_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal tmp_9_3_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_3_reg_1635 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_080_2_3_fu_613_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_3_reg_1642 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_072_2_2_fu_711_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_072_2_2_reg_1648 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state9_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal tmp_11_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1653 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_dist_record_2_3_fu_741_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_3_reg_1658 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_3_1_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_3_1_reg_1663 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_3_2_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_3_2_reg_1668 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_080_2_3_2_fu_767_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_3_2_reg_1674 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_4_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_4_reg_1680 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state10_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp_9_4_1_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_4_1_reg_1685 : STD_LOGIC_VECTOR (0 downto 0);
    signal knn_set_V_load_13_080_2_4_fu_793_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_load_13_080_2_4_reg_1691 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_072_2_4_fu_850_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_072_2_4_reg_1697 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state11_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal p_min_dist_record_2_4_fu_861_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_min_dist_record_2_4_reg_1702 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_4_2_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_4_2_reg_1707 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_5_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_5_reg_1712 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_080_2_5_fu_887_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_5_reg_1719 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_5_1_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_5_1_reg_1725 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state12_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal tmp_9_5_2_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_5_2_reg_1730 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_080_2_5_2_fu_913_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_5_2_reg_1736 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1742 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state13_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal tmp_16_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_1747 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_dist_record_2_5_2_fu_950_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_5_2_reg_1752 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_6_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_6_reg_1757 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_6_1_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_6_1_reg_1762 : STD_LOGIC_VECTOR (0 downto 0);
    signal knn_set_V_load_19_080_2_6_fu_976_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_load_19_080_2_6_reg_1768 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state14_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal p_072_2_6_fu_1014_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_072_2_6_reg_1779 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_6_2_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_6_2_reg_1784 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_7_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_7_reg_1789 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_080_2_7_fu_1040_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_7_reg_1796 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_19_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1802 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state15_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal min_dist_record_2_7_fu_1068_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_7_reg_1807 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_7_1_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_7_1_reg_1812 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_7_2_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_7_2_reg_1817 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_080_2_7_2_fu_1094_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_7_2_reg_1823 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_8_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_8_reg_1829 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_state16_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal tmp_9_8_1_fu_1114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_8_1_reg_1834 : STD_LOGIC_VECTOR (0 downto 0);
    signal knn_set_V_load_25_080_2_8_fu_1120_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_load_25_080_2_8_reg_1840 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_072_2_8_fu_1177_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_072_2_8_reg_1846 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state17_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal p_min_dist_record_2_8_fu_1188_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_min_dist_record_2_8_reg_1851 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_8_2_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_8_2_reg_1856 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_9_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_9_reg_1861 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_080_2_9_fu_1214_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_9_reg_1868 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_23_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_1874 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_state18_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal tmp_9_9_2_fu_1238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_9_2_reg_1880 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1885 : STD_LOGIC_VECTOR (0 downto 0);
    signal score_addr_2_reg_1891 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_state19_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal exitcond_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1896 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state22_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal i_2_fu_1360_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_2_reg_1900 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal min_index_V_agg_result_V_fu_1377_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal max_score_2_max_score_fu_1385_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state22 : STD_LOGIC;
    signal score_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal score_ce0 : STD_LOGIC;
    signal score_we0 : STD_LOGIC;
    signal score_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_402 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_phi_fu_417_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal min_index_V_phi_fu_452_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_1297_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal tmp_4_fu_1342_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1366_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_1347_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal p_080_2_fu_495_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_0_2_fu_522_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_load_4_080_2_1_fu_548_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_2_fu_574_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_2_2_fu_600_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_dist_record_2_cast_fu_633_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_072_2_0_2_fu_644_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_072_2_fu_625_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal min_dist_record_2_0_2_cast_cast_fu_659_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_min_dist_record_2_fu_636_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_min_dist_record_2_1_cast_cast_fu_678_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_1_fu_666_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_072_2_1_2_cast_fu_697_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_072_2_1_fu_651_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal min_dist_record_2_2_cast_fu_719_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_1_2_fu_685_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_2_2_cast_cast_fu_734_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_min_dist_record_2_2_fu_722_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal knn_set_V_load_10_080_2_3_fu_754_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_4_fu_780_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_072_2_2_2_cast_cast_fu_801_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_min_dist_record_2_3_cast_cast_fu_818_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_072_2_3_2_cast_fu_836_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_072_2_3_fu_808_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal min_dist_record_2_4_cast_fu_858_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_3_2_fu_825_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_080_2_4_2_fu_874_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_load_16_080_2_5_fu_900_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_dist_record_2_4_2_cast_cast_fu_925_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_min_dist_record_2_5_cast_cast_fu_943_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_5_fu_932_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_080_2_6_fu_963_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_072_2_4_2_cast_cast_fu_984_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_18_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_072_2_5_2_cast_fu_1001_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_072_2_5_fu_991_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_080_2_6_2_fu_1027_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_dist_record_2_6_cast_fu_1048_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_6_2_cast_cast_fu_1061_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_min_dist_record_2_6_fu_1051_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal knn_set_V_load_22_080_2_7_fu_1081_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_8_fu_1107_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_072_2_6_2_cast_cast_fu_1128_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_20_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_min_dist_record_2_7_cast_cast_fu_1145_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_072_2_7_2_fu_1163_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_072_2_7_fu_1135_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal min_dist_record_2_8_cast_fu_1185_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_7_2_fu_1152_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_080_2_8_2_fu_1201_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal tmp_9_9_1_fu_1226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal knn_set_V_load_28_080_2_9_fu_1231_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_072_2_8_2_fu_1250_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal min_dist_record_2_8_2_cast_cast_fu_1263_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_072_2_9_fu_1257_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_min_dist_record_2_9_cast_cast_fu_1283_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal min_dist_record_2_9_fu_1270_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_072_2_9_2_fu_1276_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl2_fu_1306_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl2_cast_fu_1314_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_cast2_fu_1302_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_fu_1318_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_cast_fu_1324_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal min_dist_record_2_9_2_fu_1290_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs_V_fu_1328_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal rhs_V_fu_1332_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_1_fu_1336_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_1_fu_1371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component knn_vote_score IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    score_U : component knn_vote_score
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => score_address0,
        ce0 => score_ce0,
        we0 => score_we0,
        d0 => score_d0,
        q0 => score_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond2_fu_460_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_subdone = ap_const_boolean_0))))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state3 xor ap_const_logic_1);
                elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_subdone = ap_const_boolean_0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond2_fu_460_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state22))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_block_pp1_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state22))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state22 xor ap_const_logic_1);
                elsif ((ap_block_pp1_stage0_subdone = ap_const_boolean_0)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_result_V_reg_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                agg_result_V_reg_424 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_reg_1896))) then 
                agg_result_V_reg_424 <= min_index_V_agg_result_V_fu_1377_p3;
            end if; 
        end if;
    end process;

    i_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond2_fu_460_p2 = ap_const_lv1_0))) then 
                i_reg_402 <= i_1_fu_466_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_402 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    k_reg_413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond2_fu_460_p2 = ap_const_lv1_1))) then 
                k_reg_413 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                k_reg_413 <= k_1_reg_1556;
            end if; 
        end if;
    end process;

    max_score_reg_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                max_score_reg_436 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_reg_1896))) then 
                max_score_reg_436 <= max_score_2_max_score_fu_1385_p3;
            end if; 
        end if;
    end process;

    min_index_V_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                min_index_V_reg_448 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_reg_1896))) then 
                min_index_V_reg_448 <= i_2_reg_1900;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                exitcond3_reg_1552 <= exitcond3_fu_477_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0))) then
                exitcond_reg_1896 <= exitcond_fu_1354_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then
                i_2_reg_1900 <= i_2_fu_1360_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                k_1_reg_1556 <= k_1_fu_483_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_11001 = ap_const_boolean_0))) then
                knn_set_V_load_13_080_2_4_reg_1691 <= knn_set_V_load_13_080_2_4_fu_793_p3;
                tmp_9_4_1_reg_1685 <= tmp_9_4_1_fu_787_p2;
                tmp_9_4_reg_1680 <= tmp_9_4_fu_775_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0))) then
                knn_set_V_load_19_080_2_6_reg_1768 <= knn_set_V_load_19_080_2_6_fu_976_p3;
                min_dist_record_2_5_2_reg_1752 <= min_dist_record_2_5_2_fu_950_p3;
                tmp_15_reg_1742 <= tmp_15_fu_921_p2;
                tmp_16_reg_1747 <= tmp_16_fu_939_p2;
                tmp_9_6_1_reg_1762 <= tmp_9_6_1_fu_970_p2;
                tmp_9_6_reg_1757 <= tmp_9_6_fu_958_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (exitcond3_reg_1552 = ap_const_lv1_0))) then
                knn_set_V_load_1_080_2_reg_1572 <= knn_set_V_load_1_080_2_fu_509_p3;
                tmp_9_0_1_reg_1566 <= tmp_9_0_1_fu_503_p2;
                tmp_9_reg_1561 <= tmp_9_fu_489_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_11001 = ap_const_boolean_0))) then
                knn_set_V_load_25_080_2_8_reg_1840 <= knn_set_V_load_25_080_2_8_fu_1120_p3;
                tmp_9_8_1_reg_1834 <= tmp_9_8_1_fu_1114_p2;
                tmp_9_8_reg_1829 <= tmp_9_8_fu_1102_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0))) then
                knn_set_V_load_7_080_2_2_reg_1624 <= knn_set_V_load_7_080_2_2_fu_587_p3;
                tmp_9_2_1_reg_1618 <= tmp_9_2_1_fu_581_p2;
                tmp_9_2_reg_1613 <= tmp_9_2_fu_569_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_11001 = ap_const_boolean_0))) then
                min_dist_record_2_3_reg_1658 <= min_dist_record_2_3_fu_741_p3;
                    p_072_2_2_reg_1648(1 downto 0) <= p_072_2_2_fu_711_p3(1 downto 0);    p_072_2_2_reg_1648(3) <= p_072_2_2_fu_711_p3(3);
                p_080_2_3_2_reg_1674 <= p_080_2_3_2_fu_767_p3;
                tmp_11_reg_1653 <= tmp_11_fu_730_p2;
                tmp_9_3_1_reg_1663 <= tmp_9_3_1_fu_749_p2;
                tmp_9_3_2_reg_1668 <= tmp_9_3_2_fu_761_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0))) then
                min_dist_record_2_7_reg_1807 <= min_dist_record_2_7_fu_1068_p3;
                p_080_2_7_2_reg_1823 <= p_080_2_7_2_fu_1094_p3;
                tmp_19_reg_1802 <= tmp_19_fu_1057_p2;
                tmp_9_7_1_reg_1812 <= tmp_9_7_1_fu_1076_p2;
                tmp_9_7_2_reg_1817 <= tmp_9_7_2_fu_1088_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0))) then
                p_072_2_4_reg_1697 <= p_072_2_4_fu_850_p3;
                p_080_2_5_reg_1719 <= p_080_2_5_fu_887_p3;
                p_min_dist_record_2_4_reg_1702 <= p_min_dist_record_2_4_fu_861_p3;
                tmp_9_4_2_reg_1707 <= tmp_9_4_2_fu_869_p2;
                tmp_9_5_reg_1712 <= tmp_9_5_fu_881_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0))) then
                p_072_2_6_reg_1779 <= p_072_2_6_fu_1014_p3;
                p_080_2_7_reg_1796 <= p_080_2_7_fu_1040_p3;
                tmp_17_reg_1774 <= tmp_17_fu_997_p2;
                tmp_9_6_2_reg_1784 <= tmp_9_6_2_fu_1022_p2;
                tmp_9_7_reg_1789 <= tmp_9_7_fu_1034_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_11001 = ap_const_boolean_0))) then
                p_072_2_8_reg_1846 <= p_072_2_8_fu_1177_p3;
                p_080_2_9_reg_1868 <= p_080_2_9_fu_1214_p3;
                p_min_dist_record_2_8_reg_1851 <= p_min_dist_record_2_8_fu_1188_p3;
                tmp_9_8_2_reg_1856 <= tmp_9_8_2_fu_1196_p2;
                tmp_9_9_reg_1861 <= tmp_9_9_fu_1208_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0))) then
                p_080_2_1_2_reg_1607 <= p_080_2_1_2_fu_561_p3;
                tmp_9_1_1_reg_1596 <= tmp_9_1_1_fu_543_p2;
                tmp_9_1_2_reg_1601 <= tmp_9_1_2_fu_555_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0))) then
                p_080_2_1_reg_1590 <= p_080_2_1_fu_535_p3;
                tmp_9_0_2_reg_1578 <= tmp_9_0_2_fu_517_p2;
                tmp_9_1_reg_1583 <= tmp_9_1_fu_529_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_11001 = ap_const_boolean_0))) then
                p_080_2_3_reg_1642 <= p_080_2_3_fu_613_p3;
                tmp_9_2_2_reg_1630 <= tmp_9_2_2_fu_595_p2;
                tmp_9_3_reg_1635 <= tmp_9_3_fu_607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0))) then
                p_080_2_5_2_reg_1736 <= p_080_2_5_2_fu_913_p3;
                tmp_9_5_1_reg_1725 <= tmp_9_5_1_fu_895_p2;
                tmp_9_5_2_reg_1730 <= tmp_9_5_2_fu_907_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_11001 = ap_const_boolean_0))) then
                score_addr_2_reg_1891 <= tmp_2_fu_1297_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_11001 = ap_const_boolean_0))) then
                tmp_23_reg_1874 <= tmp_23_fu_1222_p2;
                tmp_24_reg_1885 <= tmp_24_fu_1244_p2;
                tmp_9_9_2_reg_1880 <= tmp_9_9_2_fu_1238_p2;
            end if;
        end if;
    end process;
    p_072_2_2_reg_1648(2) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond2_fu_460_p2, ap_CS_fsm_state2, exitcond3_fu_477_p2, ap_enable_reg_pp0_iter0, exitcond_fu_1354_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage16_subdone, ap_block_pp1_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond2_fu_460_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond3_fu_477_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond3_fu_477_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_block_pp0_stage1_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_block_pp0_stage2_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_block_pp0_stage3_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_block_pp0_stage4_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_block_pp0_stage5_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_block_pp0_stage6_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_block_pp0_stage7_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_block_pp0_stage8_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_block_pp0_stage9_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_block_pp0_stage10_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_block_pp0_stage11_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_block_pp0_stage12_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_block_pp0_stage13_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_block_pp0_stage14_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_block_pp0_stage15_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_block_pp0_stage16_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_fu_1354_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_fu_1354_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(11);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(20);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state21 <= ap_CS_fsm(19);
    ap_CS_fsm_state24 <= ap_CS_fsm(21);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond3_fu_477_p2)
    begin
        if ((ap_const_lv1_1 = exitcond3_fu_477_p2)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state22_assign_proc : process(exitcond_fu_1354_p2)
    begin
        if ((ap_const_lv1_1 = exitcond_fu_1354_p2)) then 
            ap_condition_pp1_exit_iter0_state22 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state24)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = ap_enable_reg_pp1_iter1))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= agg_result_V_reg_424;
    exitcond2_fu_460_p2 <= "1" when (i_reg_402 = ap_const_lv4_A) else "0";
    exitcond3_fu_477_p2 <= "1" when (k_phi_fu_417_p4 = ap_const_lv2_3) else "0";
    exitcond_fu_1354_p2 <= "1" when (min_index_V_phi_fu_452_p4 = ap_const_lv4_A) else "0";
    i_1_fu_466_p2 <= std_logic_vector(unsigned(i_reg_402) + unsigned(ap_const_lv4_1));
    i_2_fu_1360_p2 <= std_logic_vector(unsigned(min_index_V_phi_fu_452_p4) + unsigned(ap_const_lv4_1));
    k_1_fu_483_p2 <= std_logic_vector(unsigned(k_phi_fu_417_p4) + unsigned(ap_const_lv2_1));

    k_phi_fu_417_p4_assign_proc : process(k_reg_413, exitcond3_reg_1552, ap_CS_fsm_pp0_stage0, k_1_reg_1556, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            k_phi_fu_417_p4 <= k_1_reg_1556;
        else 
            k_phi_fu_417_p4 <= k_reg_413;
        end if; 
    end process;


    knn_set_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage0, ap_block_pp0_stage16, tmp_4_fu_1342_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= tmp_4_fu_1342_p1(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_1C(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_1A(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_18(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_16(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_14(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_12(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_10(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_E(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_C(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_A(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_8(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_6(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_4(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_2(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
                knn_set_V_address0 <= ap_const_lv64_0(5 - 1 downto 0);
            else 
                knn_set_V_address0 <= "XXXXX";
            end if;
        else 
            knn_set_V_address0 <= "XXXXX";
        end if; 
    end process;


    knn_set_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_1D(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_1B(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_19(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_17(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_15(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_13(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_11(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_F(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_D(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_B(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_9(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_7(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_5(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_3(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
                knn_set_V_address1 <= ap_const_lv64_1(5 - 1 downto 0);
            else 
                knn_set_V_address1 <= "XXXXX";
            end if;
        else 
            knn_set_V_address1 <= "XXXXX";
        end if; 
    end process;


    knn_set_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_11001 = ap_const_boolean_0)))) then 
            knn_set_V_ce0 <= ap_const_logic_1;
        else 
            knn_set_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    knn_set_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_11001 = ap_const_boolean_0)))) then 
            knn_set_V_ce1 <= ap_const_logic_1;
        else 
            knn_set_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    knn_set_V_d0 <= ap_const_lv6_32;
    knn_set_V_load_10_080_2_3_fu_754_p3 <= 
        knn_set_V_q0 when (tmp_9_3_1_fu_749_p2(0) = '1') else 
        p_080_2_3_reg_1642;
    knn_set_V_load_13_080_2_4_fu_793_p3 <= 
        knn_set_V_q1 when (tmp_9_4_1_fu_787_p2(0) = '1') else 
        p_080_2_4_fu_780_p3;
    knn_set_V_load_16_080_2_5_fu_900_p3 <= 
        knn_set_V_q0 when (tmp_9_5_1_fu_895_p2(0) = '1') else 
        p_080_2_5_reg_1719;
    knn_set_V_load_19_080_2_6_fu_976_p3 <= 
        knn_set_V_q1 when (tmp_9_6_1_fu_970_p2(0) = '1') else 
        p_080_2_6_fu_963_p3;
    knn_set_V_load_1_080_2_fu_509_p3 <= 
        knn_set_V_q1 when (tmp_9_0_1_fu_503_p2(0) = '1') else 
        p_080_2_fu_495_p3;
    knn_set_V_load_22_080_2_7_fu_1081_p3 <= 
        knn_set_V_q0 when (tmp_9_7_1_fu_1076_p2(0) = '1') else 
        p_080_2_7_reg_1796;
    knn_set_V_load_25_080_2_8_fu_1120_p3 <= 
        knn_set_V_q1 when (tmp_9_8_1_fu_1114_p2(0) = '1') else 
        p_080_2_8_fu_1107_p3;
    knn_set_V_load_28_080_2_9_fu_1231_p3 <= 
        knn_set_V_q0 when (tmp_9_9_1_fu_1226_p2(0) = '1') else 
        p_080_2_9_reg_1868;
    knn_set_V_load_4_080_2_1_fu_548_p3 <= 
        knn_set_V_q0 when (tmp_9_1_1_fu_543_p2(0) = '1') else 
        p_080_2_1_reg_1590;
    knn_set_V_load_7_080_2_2_fu_587_p3 <= 
        knn_set_V_q1 when (tmp_9_2_1_fu_581_p2(0) = '1') else 
        p_080_2_2_fu_574_p3;

    knn_set_V_we0_assign_proc : process(exitcond3_reg_1552, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_11001 = ap_const_boolean_0))) then 
            knn_set_V_we0 <= ap_const_logic_1;
        else 
            knn_set_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    lhs_V_cast2_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_072_2_9_2_fu_1276_p3),7));
    lhs_V_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_cast_fu_1324_p1),37));
    max_score_2_max_score_fu_1385_p3 <= 
        score_q0 when (tmp_1_fu_1371_p2(0) = '1') else 
        max_score_reg_436;
    min_dist_record_2_0_2_cast_cast_fu_659_p3 <= 
        ap_const_lv3_0 when (tmp_9_1_reg_1583(0) = '1') else 
        ap_const_lv3_2;
    min_dist_record_2_1_2_fu_685_p3 <= 
        p_min_dist_record_2_1_cast_cast_fu_678_p3 when (tmp_7_fu_674_p2(0) = '1') else 
        min_dist_record_2_1_fu_666_p3;
    min_dist_record_2_1_fu_666_p3 <= 
        min_dist_record_2_0_2_cast_cast_fu_659_p3 when (tmp_6_fu_647_p2(0) = '1') else 
        p_min_dist_record_2_fu_636_p3;
    min_dist_record_2_2_2_cast_cast_fu_734_p3 <= 
        ap_const_lv3_0 when (tmp_9_3_reg_1635(0) = '1') else 
        ap_const_lv3_2;
    min_dist_record_2_2_cast_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_2_1_reg_1618),3));
    min_dist_record_2_3_2_fu_825_p3 <= 
        p_min_dist_record_2_3_cast_cast_fu_818_p3 when (tmp_12_fu_814_p2(0) = '1') else 
        min_dist_record_2_3_reg_1658;
    min_dist_record_2_3_fu_741_p3 <= 
        min_dist_record_2_2_2_cast_cast_fu_734_p3 when (tmp_11_fu_730_p2(0) = '1') else 
        p_min_dist_record_2_2_fu_722_p3;
    min_dist_record_2_4_2_cast_cast_fu_925_p3 <= 
        ap_const_lv3_0 when (tmp_9_5_reg_1712(0) = '1') else 
        ap_const_lv3_2;
    min_dist_record_2_4_cast_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_4_1_reg_1685),3));
    min_dist_record_2_5_2_fu_950_p3 <= 
        p_min_dist_record_2_5_cast_cast_fu_943_p3 when (tmp_16_fu_939_p2(0) = '1') else 
        min_dist_record_2_5_fu_932_p3;
    min_dist_record_2_5_fu_932_p3 <= 
        min_dist_record_2_4_2_cast_cast_fu_925_p3 when (tmp_15_fu_921_p2(0) = '1') else 
        p_min_dist_record_2_4_reg_1702;
    min_dist_record_2_6_2_cast_cast_fu_1061_p3 <= 
        ap_const_lv3_0 when (tmp_9_7_reg_1789(0) = '1') else 
        ap_const_lv3_2;
    min_dist_record_2_6_cast_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_6_1_reg_1762),3));
    min_dist_record_2_7_2_fu_1152_p3 <= 
        p_min_dist_record_2_7_cast_cast_fu_1145_p3 when (tmp_20_fu_1141_p2(0) = '1') else 
        min_dist_record_2_7_reg_1807;
    min_dist_record_2_7_fu_1068_p3 <= 
        min_dist_record_2_6_2_cast_cast_fu_1061_p3 when (tmp_19_fu_1057_p2(0) = '1') else 
        p_min_dist_record_2_6_fu_1051_p3;
    min_dist_record_2_8_2_cast_cast_fu_1263_p3 <= 
        ap_const_lv3_0 when (tmp_9_9_reg_1861(0) = '1') else 
        ap_const_lv3_2;
    min_dist_record_2_8_cast_fu_1185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_8_1_reg_1834),3));
    min_dist_record_2_9_2_fu_1290_p3 <= 
        p_min_dist_record_2_9_cast_cast_fu_1283_p3 when (tmp_24_reg_1885(0) = '1') else 
        min_dist_record_2_9_fu_1270_p3;
    min_dist_record_2_9_fu_1270_p3 <= 
        min_dist_record_2_8_2_cast_cast_fu_1263_p3 when (tmp_23_reg_1874(0) = '1') else 
        p_min_dist_record_2_8_reg_1851;
    min_dist_record_2_cast_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_0_1_reg_1566),3));
    min_index_V_agg_result_V_fu_1377_p3 <= 
        min_index_V_reg_448 when (tmp_1_fu_1371_p2(0) = '1') else 
        agg_result_V_reg_424;

    min_index_V_phi_fu_452_p4_assign_proc : process(min_index_V_reg_448, exitcond_reg_1896, ap_CS_fsm_pp1_stage0, i_2_reg_1900, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_reg_1896) and (ap_block_pp1_stage0 = ap_const_boolean_0))) then 
            min_index_V_phi_fu_452_p4 <= i_2_reg_1900;
        else 
            min_index_V_phi_fu_452_p4 <= min_index_V_reg_448;
        end if; 
    end process;

    p_072_2_0_2_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_1_reg_1583),4));
    p_072_2_1_2_cast_fu_697_p3 <= 
        ap_const_lv4_2 when (tmp_8_fu_693_p2(0) = '1') else 
        ap_const_lv4_1;
    p_072_2_1_fu_651_p3 <= 
        p_072_2_0_2_fu_644_p1 when (tmp_6_fu_647_p2(0) = '1') else 
        p_072_2_fu_625_p3;
    p_072_2_2_2_cast_cast_fu_801_p3 <= 
        ap_const_lv4_3 when (tmp_9_3_reg_1635(0) = '1') else 
        ap_const_lv4_2;
    p_072_2_2_fu_711_p3 <= 
        p_072_2_1_2_cast_fu_697_p3 when (tmp_10_fu_705_p2(0) = '1') else 
        p_072_2_1_fu_651_p3;
    p_072_2_3_2_cast_fu_836_p3 <= 
        ap_const_lv4_4 when (tmp_13_fu_832_p2(0) = '1') else 
        ap_const_lv4_3;
    p_072_2_3_fu_808_p3 <= 
        p_072_2_2_2_cast_cast_fu_801_p3 when (tmp_11_reg_1653(0) = '1') else 
        p_072_2_2_reg_1648;
    p_072_2_4_2_cast_cast_fu_984_p3 <= 
        ap_const_lv4_5 when (tmp_9_5_reg_1712(0) = '1') else 
        ap_const_lv4_4;
    p_072_2_4_fu_850_p3 <= 
        p_072_2_3_2_cast_fu_836_p3 when (tmp_14_fu_844_p2(0) = '1') else 
        p_072_2_3_fu_808_p3;
    p_072_2_5_2_cast_fu_1001_p3 <= 
        ap_const_lv4_6 when (tmp_17_fu_997_p2(0) = '1') else 
        ap_const_lv4_5;
    p_072_2_5_fu_991_p3 <= 
        p_072_2_4_2_cast_cast_fu_984_p3 when (tmp_15_reg_1742(0) = '1') else 
        p_072_2_4_reg_1697;
    p_072_2_6_2_cast_cast_fu_1128_p3 <= 
        ap_const_lv4_7 when (tmp_9_7_reg_1789(0) = '1') else 
        ap_const_lv4_6;
    p_072_2_6_fu_1014_p3 <= 
        p_072_2_5_2_cast_fu_1001_p3 when (tmp_18_fu_1009_p2(0) = '1') else 
        p_072_2_5_fu_991_p3;
    p_072_2_7_2_fu_1163_p3 <= 
        ap_const_lv4_8 when (tmp_21_fu_1159_p2(0) = '1') else 
        ap_const_lv4_7;
    p_072_2_7_fu_1135_p3 <= 
        p_072_2_6_2_cast_cast_fu_1128_p3 when (tmp_19_reg_1802(0) = '1') else 
        p_072_2_6_reg_1779;
    p_072_2_8_2_fu_1250_p3 <= 
        ap_const_lv4_9 when (tmp_9_9_reg_1861(0) = '1') else 
        ap_const_lv4_8;
    p_072_2_8_fu_1177_p3 <= 
        p_072_2_7_2_fu_1163_p3 when (tmp_22_fu_1171_p2(0) = '1') else 
        p_072_2_7_fu_1135_p3;
    p_072_2_9_2_fu_1276_p3 <= 
        ap_const_lv4_9 when (tmp_24_reg_1885(0) = '1') else 
        p_072_2_9_fu_1257_p3;
    p_072_2_9_fu_1257_p3 <= 
        p_072_2_8_2_fu_1250_p3 when (tmp_23_reg_1874(0) = '1') else 
        p_072_2_8_reg_1846;
    p_072_2_fu_625_p3 <= 
        ap_const_lv4_0 when (tmp_5_fu_621_p2(0) = '1') else 
        ap_const_lv4_A;
    p_080_2_0_2_fu_522_p3 <= 
        knn_set_V_q0 when (tmp_9_0_2_fu_517_p2(0) = '1') else 
        knn_set_V_load_1_080_2_reg_1572;
    p_080_2_1_2_fu_561_p3 <= 
        knn_set_V_q1 when (tmp_9_1_2_fu_555_p2(0) = '1') else 
        knn_set_V_load_4_080_2_1_fu_548_p3;
    p_080_2_1_fu_535_p3 <= 
        knn_set_V_q1 when (tmp_9_1_fu_529_p2(0) = '1') else 
        p_080_2_0_2_fu_522_p3;
    p_080_2_2_2_fu_600_p3 <= 
        knn_set_V_q0 when (tmp_9_2_2_fu_595_p2(0) = '1') else 
        knn_set_V_load_7_080_2_2_reg_1624;
    p_080_2_2_fu_574_p3 <= 
        knn_set_V_q0 when (tmp_9_2_fu_569_p2(0) = '1') else 
        p_080_2_1_2_reg_1607;
    p_080_2_3_2_fu_767_p3 <= 
        knn_set_V_q1 when (tmp_9_3_2_fu_761_p2(0) = '1') else 
        knn_set_V_load_10_080_2_3_fu_754_p3;
    p_080_2_3_fu_613_p3 <= 
        knn_set_V_q1 when (tmp_9_3_fu_607_p2(0) = '1') else 
        p_080_2_2_2_fu_600_p3;
    p_080_2_4_2_fu_874_p3 <= 
        knn_set_V_q0 when (tmp_9_4_2_fu_869_p2(0) = '1') else 
        knn_set_V_load_13_080_2_4_reg_1691;
    p_080_2_4_fu_780_p3 <= 
        knn_set_V_q0 when (tmp_9_4_fu_775_p2(0) = '1') else 
        p_080_2_3_2_reg_1674;
    p_080_2_5_2_fu_913_p3 <= 
        knn_set_V_q1 when (tmp_9_5_2_fu_907_p2(0) = '1') else 
        knn_set_V_load_16_080_2_5_fu_900_p3;
    p_080_2_5_fu_887_p3 <= 
        knn_set_V_q1 when (tmp_9_5_fu_881_p2(0) = '1') else 
        p_080_2_4_2_fu_874_p3;
    p_080_2_6_2_fu_1027_p3 <= 
        knn_set_V_q0 when (tmp_9_6_2_fu_1022_p2(0) = '1') else 
        knn_set_V_load_19_080_2_6_reg_1768;
    p_080_2_6_fu_963_p3 <= 
        knn_set_V_q0 when (tmp_9_6_fu_958_p2(0) = '1') else 
        p_080_2_5_2_reg_1736;
    p_080_2_7_2_fu_1094_p3 <= 
        knn_set_V_q1 when (tmp_9_7_2_fu_1088_p2(0) = '1') else 
        knn_set_V_load_22_080_2_7_fu_1081_p3;
    p_080_2_7_fu_1040_p3 <= 
        knn_set_V_q1 when (tmp_9_7_fu_1034_p2(0) = '1') else 
        p_080_2_6_2_fu_1027_p3;
    p_080_2_8_2_fu_1201_p3 <= 
        knn_set_V_q0 when (tmp_9_8_2_fu_1196_p2(0) = '1') else 
        knn_set_V_load_25_080_2_8_reg_1840;
    p_080_2_8_fu_1107_p3 <= 
        knn_set_V_q0 when (tmp_9_8_fu_1102_p2(0) = '1') else 
        p_080_2_7_2_reg_1823;
    p_080_2_9_fu_1214_p3 <= 
        knn_set_V_q1 when (tmp_9_9_fu_1208_p2(0) = '1') else 
        p_080_2_8_2_fu_1201_p3;
    p_080_2_fu_495_p3 <= 
        knn_set_V_q0 when (tmp_9_fu_489_p2(0) = '1') else 
        ap_const_lv6_32;
    p_min_dist_record_2_1_cast_cast_fu_678_p3 <= 
        ap_const_lv3_2 when (tmp_9_1_2_reg_1601(0) = '1') else 
        ap_const_lv3_1;
    p_min_dist_record_2_2_fu_722_p3 <= 
        min_dist_record_2_2_cast_fu_719_p1 when (tmp_8_fu_693_p2(0) = '1') else 
        min_dist_record_2_1_2_fu_685_p3;
    p_min_dist_record_2_3_cast_cast_fu_818_p3 <= 
        ap_const_lv3_2 when (tmp_9_3_2_reg_1668(0) = '1') else 
        ap_const_lv3_1;
    p_min_dist_record_2_4_fu_861_p3 <= 
        min_dist_record_2_4_cast_fu_858_p1 when (tmp_13_fu_832_p2(0) = '1') else 
        min_dist_record_2_3_2_fu_825_p3;
    p_min_dist_record_2_5_cast_cast_fu_943_p3 <= 
        ap_const_lv3_2 when (tmp_9_5_2_reg_1730(0) = '1') else 
        ap_const_lv3_1;
    p_min_dist_record_2_6_fu_1051_p3 <= 
        min_dist_record_2_6_cast_fu_1048_p1 when (tmp_17_reg_1774(0) = '1') else 
        min_dist_record_2_5_2_reg_1752;
    p_min_dist_record_2_7_cast_cast_fu_1145_p3 <= 
        ap_const_lv3_2 when (tmp_9_7_2_reg_1817(0) = '1') else 
        ap_const_lv3_1;
    p_min_dist_record_2_8_fu_1188_p3 <= 
        min_dist_record_2_8_cast_fu_1185_p1 when (tmp_21_fu_1159_p2(0) = '1') else 
        min_dist_record_2_7_2_fu_1152_p3;
    p_min_dist_record_2_9_cast_cast_fu_1283_p3 <= 
        ap_const_lv3_2 when (tmp_9_9_2_reg_1880(0) = '1') else 
        ap_const_lv3_1;
    p_min_dist_record_2_fu_636_p3 <= 
        min_dist_record_2_cast_fu_633_p1 when (tmp_5_fu_621_p2(0) = '1') else 
        ap_const_lv3_4;
    p_shl2_cast_fu_1314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_1306_p3),7));
    p_shl2_fu_1306_p3 <= (p_072_2_9_2_fu_1276_p3 & ap_const_lv2_0);
    r_V_1_fu_1336_p2 <= std_logic_vector(unsigned(lhs_V_fu_1328_p1) + unsigned(rhs_V_fu_1332_p1));
        r_V_cast_fu_1324_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_1318_p2),36));

    r_V_fu_1318_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_1314_p1) - unsigned(lhs_V_cast2_fu_1302_p1));
    rhs_V_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(min_dist_record_2_9_2_fu_1290_p3),37));

    score_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, score_addr_2_reg_1891, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_fu_472_p1, tmp_2_fu_1297_p1, ap_block_pp0_stage16, tmp_s_fu_1366_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0 = ap_const_boolean_0))) then 
            score_address0 <= tmp_s_fu_1366_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            score_address0 <= score_addr_2_reg_1891;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16 = ap_const_boolean_0))) then 
            score_address0 <= tmp_2_fu_1297_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            score_address0 <= tmp_fu_472_p1(4 - 1 downto 0);
        else 
            score_address0 <= "XXXX";
        end if; 
    end process;


    score_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_11001 = ap_const_boolean_0)))) then 
            score_ce0 <= ap_const_logic_1;
        else 
            score_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    score_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_3_fu_1347_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            score_d0 <= tmp_3_fu_1347_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            score_d0 <= ap_const_lv32_0;
        else 
            score_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    score_we0_assign_proc : process(exitcond2_fu_460_p2, ap_CS_fsm_state2, exitcond3_reg_1552, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond2_fu_460_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond3_reg_1552 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            score_we0 <= ap_const_logic_1;
        else 
            score_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_705_p2 <= (tmp_8_fu_693_p2 or tmp_7_fu_674_p2);
    tmp_11_fu_730_p2 <= (tmp_9_3_reg_1635 or tmp_9_2_2_reg_1630);
    tmp_12_fu_814_p2 <= (tmp_9_3_2_reg_1668 or tmp_9_3_1_reg_1663);
    tmp_13_fu_832_p2 <= (tmp_9_4_1_reg_1685 or tmp_9_4_reg_1680);
    tmp_14_fu_844_p2 <= (tmp_13_fu_832_p2 or tmp_12_fu_814_p2);
    tmp_15_fu_921_p2 <= (tmp_9_5_reg_1712 or tmp_9_4_2_reg_1707);
    tmp_16_fu_939_p2 <= (tmp_9_5_2_reg_1730 or tmp_9_5_1_reg_1725);
    tmp_17_fu_997_p2 <= (tmp_9_6_1_reg_1762 or tmp_9_6_reg_1757);
    tmp_18_fu_1009_p2 <= (tmp_17_fu_997_p2 or tmp_16_reg_1747);
    tmp_19_fu_1057_p2 <= (tmp_9_7_reg_1789 or tmp_9_6_2_reg_1784);
    tmp_1_fu_1371_p2 <= "1" when (signed(score_q0) > signed(max_score_reg_436)) else "0";
    tmp_20_fu_1141_p2 <= (tmp_9_7_2_reg_1817 or tmp_9_7_1_reg_1812);
    tmp_21_fu_1159_p2 <= (tmp_9_8_1_reg_1834 or tmp_9_8_reg_1829);
    tmp_22_fu_1171_p2 <= (tmp_21_fu_1159_p2 or tmp_20_fu_1141_p2);
    tmp_23_fu_1222_p2 <= (tmp_9_9_reg_1861 or tmp_9_8_2_reg_1856);
    tmp_24_fu_1244_p2 <= (tmp_9_9_2_fu_1238_p2 or tmp_9_9_1_fu_1226_p2);
    tmp_2_fu_1297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_072_2_9_2_fu_1276_p3),64));
    tmp_3_fu_1347_p2 <= std_logic_vector(unsigned(score_q0) + unsigned(ap_const_lv32_1));
        tmp_4_fu_1342_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_1_fu_1336_p2),64));

    tmp_5_fu_621_p2 <= (tmp_9_0_1_reg_1566 or tmp_9_reg_1561);
    tmp_6_fu_647_p2 <= (tmp_9_1_reg_1583 or tmp_9_0_2_reg_1578);
    tmp_7_fu_674_p2 <= (tmp_9_1_2_reg_1601 or tmp_9_1_1_reg_1596);
    tmp_8_fu_693_p2 <= (tmp_9_2_1_reg_1618 or tmp_9_2_reg_1613);
    tmp_9_0_1_fu_503_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(p_080_2_fu_495_p3)) else "0";
    tmp_9_0_2_fu_517_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(knn_set_V_load_1_080_2_reg_1572)) else "0";
    tmp_9_1_1_fu_543_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(p_080_2_1_reg_1590)) else "0";
    tmp_9_1_2_fu_555_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(knn_set_V_load_4_080_2_1_fu_548_p3)) else "0";
    tmp_9_1_fu_529_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(p_080_2_0_2_fu_522_p3)) else "0";
    tmp_9_2_1_fu_581_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(p_080_2_2_fu_574_p3)) else "0";
    tmp_9_2_2_fu_595_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(knn_set_V_load_7_080_2_2_reg_1624)) else "0";
    tmp_9_2_fu_569_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(p_080_2_1_2_reg_1607)) else "0";
    tmp_9_3_1_fu_749_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(p_080_2_3_reg_1642)) else "0";
    tmp_9_3_2_fu_761_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(knn_set_V_load_10_080_2_3_fu_754_p3)) else "0";
    tmp_9_3_fu_607_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(p_080_2_2_2_fu_600_p3)) else "0";
    tmp_9_4_1_fu_787_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(p_080_2_4_fu_780_p3)) else "0";
    tmp_9_4_2_fu_869_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(knn_set_V_load_13_080_2_4_reg_1691)) else "0";
    tmp_9_4_fu_775_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(p_080_2_3_2_reg_1674)) else "0";
    tmp_9_5_1_fu_895_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(p_080_2_5_reg_1719)) else "0";
    tmp_9_5_2_fu_907_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(knn_set_V_load_16_080_2_5_fu_900_p3)) else "0";
    tmp_9_5_fu_881_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(p_080_2_4_2_fu_874_p3)) else "0";
    tmp_9_6_1_fu_970_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(p_080_2_6_fu_963_p3)) else "0";
    tmp_9_6_2_fu_1022_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(knn_set_V_load_19_080_2_6_reg_1768)) else "0";
    tmp_9_6_fu_958_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(p_080_2_5_2_reg_1736)) else "0";
    tmp_9_7_1_fu_1076_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(p_080_2_7_reg_1796)) else "0";
    tmp_9_7_2_fu_1088_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(knn_set_V_load_22_080_2_7_fu_1081_p3)) else "0";
    tmp_9_7_fu_1034_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(p_080_2_6_2_fu_1027_p3)) else "0";
    tmp_9_8_1_fu_1114_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(p_080_2_8_fu_1107_p3)) else "0";
    tmp_9_8_2_fu_1196_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(knn_set_V_load_25_080_2_8_reg_1840)) else "0";
    tmp_9_8_fu_1102_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(p_080_2_7_2_reg_1823)) else "0";
    tmp_9_9_1_fu_1226_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(p_080_2_9_reg_1868)) else "0";
    tmp_9_9_2_fu_1238_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(knn_set_V_load_28_080_2_9_fu_1231_p3)) else "0";
    tmp_9_9_fu_1208_p2 <= "1" when (unsigned(knn_set_V_q1) < unsigned(p_080_2_8_2_fu_1201_p3)) else "0";
    tmp_9_fu_489_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(ap_const_lv6_32)) else "0";
    tmp_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_402),64));
    tmp_s_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(min_index_V_phi_fu_452_p4),64));
end behav;
